webpackJsonp([84860036509320],{457:function(e,n){e.exports={data:{markdownRemark:{html:'<h2>REST API calls</h2>\n<h3>Acquire Admin Access Token. Password Grant.</h3>\n<pre><code class="language-bash">curl --location --request POST \'http://localhost:9080/auth/realms/master/protocol/openid-connect/token\' --header \'Content-Type: application/x-www-form-urlencoded\' --data-urlencode \'username=admin\' --data-urlencode \'password=admin\' --data-urlencode \'grant_type=password\' --data-urlencode \'client_id=admin-cli\'\n</code></pre>\n<p>{"access<em>token":"","expires</em>in":60,"refresh<em>expires</em>in":1800,"refresh<em>token":"","token</em>type":"bearer","not-before-policy":0,"session_state":"ce79ef94-3af3-4e54-87b3-8012dbbe44b6","scope":"email profile"}</p>\n<h3>REST API Call to Create a New User Account</h3>\n<pre><code class="language-bash">curl --location --request POST \'http://localhost:9080/auth/admin/realms/marvelrealm/users\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Authorization: Bearer \' \\\n--data-raw \'{"firstName":"John","lastName":"Doe", "email":"test@test.com", "enabled":"true", "username":"app-user"}\'\n</code></pre>\n<h3>REST API Call to Create a new role for the realm</h3>\n<pre><code class="language-bash">curl -X POST "http://localhost:9080/auth/admin/realms/marvelrealm/roles" \n --header "Content-Type: application/json" \\\n --header "Authorization: Bearer " \\\n --data-raw \'{"name": "john_doe_role"}\'\n</code></pre>\n<h3>REST API call to Get realm-level role mappings [SAT]</h3>\n<pre><code class="language-bash">curl --location --request GET \'http://localhost:9080/auth/admin/realms/marvelrealm/users/c4af4e2f-b432-4c3b-8405-cca86cd5b97b/role-mappings/realm\' \\\n --header "Authorization: Bearer "\n</code></pre>\n<h3>REST API call to Get realm-level roles that can be mapped [SAT]</h3>\n<pre><code class="language-bash">curl --location --request GET \'http://localhost:9080/auth/admin/realms/marvelrealm/users/2c9707a2-6157-4021-9c69-76bf87073bf5/role-mappings/realm/available\' \\\n --header "Authorization: Bearer "\n</code></pre>\n<p>response received was: [{"id":"245ee79e-2098-4119-8642-01b8a6c46174","name":"admin","composite":false,"clientRole":false,"containerId":"bateman"}]</p>\n<h3>REST API call to add a new role to user with id 2c9707a2-6157-4021-9c69-76bf87073bf5</h3>\n<pre><code class="language-bash">curl --location --request POST \'http://localhost:9080/auth/admin/realms/marvelrealm/users/2c9707a2-6157-4021-9c69-76bf87073bf5/role-mappings/realm\' -v \\\n --header \'Content-Type: application/json\' \\\n --header "Authorization: Bearer " \\\n --data-raw \'[{\n        "id": "b9e89099-75c0-43f4-8100-2804a14d2399",\n        "name": "all_access",\n        "composite": false,\n        "clientRole": false,\n        "containerId": "bateman"\n}]\'\n</code></pre>',frontmatter:{title:"Keycloak",date:"January 08, 2021",path:"/keycloak",tags:["Keycloak","queries","ID Provider","Authorization server"],excerpt:""}}},pathContext:{prev:{html:'<h3>System parameters</h3>\n<p>Elasticsearch version and more basic parameters:</p>\n<pre><code class="language-bash">curl -XGET https://localhost:9200 -u admin:admin --insecure\n</code></pre>\n<p>Information on nodes:</p>\n<pre><code class="language-bash">curl -XGET https://localhost:9200/_cat/nodes?v -u admin:admin --insecure\n</code></pre>\n<p>Integrated plugins:</p>\n<pre><code class="language-bash">curl -XGET https://localhost:9200/_cat/plugins?v -u admin:admin --insecure\n</code></pre>\n<p>Information on authentication:</p>\n<pre><code class="language-bash">curl -XGET https://localhost:9200/_opendistro/_security/authinfo -u admin:admin --insecure\n</code></pre>\n<p>Information on cluster:</p>\n<pre><code class="language-http">http://localhost:9200/_cluster/settings?include_defaults=true\n</code></pre>\n<p>Indices:</p>\n<pre><code class="language-bash">curl -XGET https://localhost:9200/_cat/indices -u admin:admin --insecure\n</code></pre>\n<h3>Cloning an index from dev tools console:</h3>\n<pre><code>POST _reindex\n{\n  "source": {\n    "index": "portefeuille"\n  },\n  "dest": {\n    "index": "portefeuille_test_1"\n  }\n}\n</code></pre>\n<h3>Creating a sample index from dev tools console:</h3>\n<pre><code>DELETE /bankdata\n</code></pre>\n<pre><code>PUT /bankdata\nPOST /bankdata/1\n{ "age": 42, "balance": 12000 }\nPOST /bankdata/2\n{ "age": 28, "balance": 7000 }\nPOST /bankdata/3\n{ "age": 51, "balance": 2300 }\nPOST /bankdata/4\n{ "age": 15, "balance": 450 }\nPOST /bankdata/5\n{ "age": 33 }\nPOST /bankdata/6\n{ "age": 32 }\nPOST /bankdata/7\n{ "age": 27 }\nPOST /bankdata/8\n{ "age": 79 }\nPOST /bankdata/9\n{ "age": 43, balance: null }\n</code></pre>\n<pre><code>GET /bankdata\n</code></pre>\n<pre><code>GET /bankdata/_search\n{\n    "query": {\n        "match_all": {}\n    }\n}\n</code></pre>\n<h3>Updating a given field in an index</h3>\n<pre><code>POST lanturlu_portefeuille/_update_by_query\n{\n  "script": {\n    "lang": "painless",\n    "source": """\n   try {\n        String fieldName = \'nom_conseille_pv\';\n        String value = ctx._source[fieldName];\n        ctx._source[fieldName] = value.replace(" ","_");\n      }\n      catch(Exception e) {\n      }\n    """\n  }\n}\n</code></pre>\n<h3>Template for indexing a field as a geo_shape</h3>\n<pre><code>PUT _template/geotemplate_geoshape_dpt\n{ "index_patterns": [\n  "index_pattern_title"\n  ],\n  "settings": {},\n    "mappings": {\n      "properties": {\n        "wkt" :{\n          "type": "geo_shape"\n        }\n      }\n    },\n    "aliases": {}\n}\n</code></pre>\n<h3>Painless language scripts</h3>\n<pre><code>(((ctx?._source["MY_PARAMETER"]?:0)?:0)/((ctx?._source["OtherVariable"]?:1)?:1)?:1)\n</code></pre>',id:"C:/Users/nicolas.peron/github.com/nperon/workshop/src/pages/2020-12-03-ELK-4/index.md absPath of file >>> MarkdownRemark",frontmatter:{date:"2020-12-03T22:01:12.451Z",path:"/elk-useful-queries",title:"Useful Queries",excerpt:"",tags:["Elastic Search","queries","environment variables","system"]}},next:{html:'<h2>Links</h2>\n<ul>\n<li><a href="https://cheatography.com/tasjaevan/cheat-sheets/redis/">Cheat sheet</a>  </li>\n<li><a href="https://cheatography.com/tasjaevan/cheat-sheets/redis/">Redis commands</a></li>\n</ul>\n<h2>Redis configuration</h2>\n<p><a href="https://redis.io/topics/notifications#configuration">Documentation on configuration</a></p>\n<p>Command to get the expired events from Redis:</p>\n<pre><code>config set notify-keyspace-events AKE\n</code></pre>\n<h2>Redis cli commands</h2>\n<pre><code>set user:1:name 1\nset user:2:name 2\nget user:1:name\nkeys user*\nscan 0\ndel user:1:name 1\nget user:1:name\nflushddb\nset a b ex 10\nget a\nget a\nttl a\nexpire a 60\nset c d exat 1624737950\n</code></pre>\n<h3>xx nx</h3>\n<pre><code>set e f xx\nget e\nset e f nx\nget e\nset e g nx\nget e\n</code></pre>\n<h3>incr</h3>\n<pre><code>set a 1\nincr a\nget a\nflushdb\nincr bb\nkeys *\nget bb\ndecr bb\nget b\nflushdb\nset a 1.02\nget a\nincrbyfloat a .3\nget a\nset sam 100\nincr sam\nincrby sam 20\nincrby sam 20\ndecrby sam 5\n</code></pre>\n<pre><code>set user:1:lives 3 ex 1800\nttl user:1:lives\ndecr user:1:lives\ndecr user:1:lives\ndecr user:1:lives\nflushdb\n</code></pre>\n<h3>Hash</h3>\n<pre><code>hset user:1 name sam age 10 city atlanta\nkeys *\ntype user:1\nhget user:1 name\nhget user:1 age\nhget user:1 city\nhgetall user:1\nhset user:2 birthYear 2020 status active\nexpire user:2 10\nttl user:2*\nkeys *\nhkeys user:1\nhvals user:1\nhexists user:1 status\nhexists user:1 age\nhgetall user:1\nhdel user:1 age\ndel user:1\nkeys *\n</code></pre>\n<h3>List &#x26; Queue</h3>\n<pre><code>rpush users sam mike jake\nkeys *\ntype users\nllen users\nlrange users 0 -1\nlrange users 0 1\nlpop users\nllen users\nrpush 1 2 3 4 5 6\nllen users\nkeys *\nrpush 1 2 3 4 5 6\nlpop users\nlpop users 2\nlrange users 0 -1\n</code></pre>\n<h3>List as lifo stack</h3>\n<pre><code>flushdb\nrpush users 1 2 3 4 5 6\nllen users\nlrange users 0 -1\nrpop users\nrpop users\nrpop users\nllen users\nlrange users 0 -1\nlpush users 4\nkeys *\nlpop users\nlpop users\nlpop users\nkeys *\nllen users\nlpop users\nkeys *\n</code></pre>\n<h3>Set</h3>\n<p>A redis set is an unordered collection of unique items (string)\nsimilar to a Java set.</p>\n<h4>Use cases</h4>\n<ul>\n<li>maintain currently logged in users  </li>\n<li>maintain blacklisted IP address / users  </li>\n<li>set intersection  </li>\n</ul>\n<h4>Basic commands</h4>\n<pre><code>sadd users 1 2 3\nsadd users 4\nsadd users 5\nscard users\nsmembers users\nsadd users 4.5\nsadd users 10\nsmembers users\nsadd users 1\nsmembers users\nsismember users 5\nsismember users 100\nsrem users 100\nsrem users 5\nsismember users 5\nsmembers users\nspop users\nspop users\nscard users\n</code></pre>\n<h4>Set intersection and union</h4>\n<pre><code>flushdb\nsadd skill:java 1 2 3 4\nsadd skill:js 2 3 4\nsadd skill:aws 4 5 6\nsinter skill:java skill:js skill:aws\nsunion skill:java skill js\nsadd candidate:criminal 4 5 6\nsdiff skill:java candidate:criminal\n</code></pre>\n<pre><code>sinterstore java-js skill:java skill:js\nkeys *\nscard java-js\nsmembers java-js\n</code></pre>',id:"C:/Users/nicolas.peron/github.com/nperon/workshop/src/pages/2021-09-11-redis/index.md absPath of file >>> MarkdownRemark",frontmatter:{date:"2021-09-11T18:38:00.451Z",path:"/redis",title:"Redis",excerpt:"",tags:["Redis"]}}}}}});
//# sourceMappingURL=path---keycloak-fbbc58af66860c34dfc4.js.map