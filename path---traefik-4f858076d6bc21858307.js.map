{"version":3,"sources":["webpack:///path---traefik-4f858076d6bc21858307.js","webpack:///./.cache/json/traefik.json"],"names":["webpackJsonp","494","module","exports","data","markdownRemark","html","frontmatter","title","date","path","tags","excerpt","pathContext","prev","id","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,4zIAA06GC,aAAm7BC,MAAA,UAAAC,KAAA,mBAAAC,KAAA,WAAAC,MAAA,WAAAC,QAAA,MAAgGC,aAAgBC,MAAQR,KAAA,4jGAA+jDS,GAAA,0GAAAR,aAAwoDE,KAAA,2BAAAC,KAAA,SAAAF,MAAA,QAAAI,QAAA,GAAAD,MAAA,WAAiGK,MAASV,KAAA,8pFAAylFS,GAAA,0GAAAR,aAAsSE,KAAA,2BAAAC,KAAA,sBAAAF,MAAA,iBAAAI,QAAA,GAAAD,MAAA","file":"path---traefik-4f858076d6bc21858307.js","sourcesContent":["webpackJsonp([86452829880231],{\n\n/***/ 494:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Links</h2>\\n<ul>\\n<li><a href=\\\"https://traefik.io/\\\">Traefik labs website</a></li>\\n<li><a href=\\\"https://github.com/56kcloud/traefik-training\\\">Brian Christner 56 k Cloud github link</a></li>\\n<li><a href=\\\"https://docs.traefik.io/providers/docker/#docker-api-access\\\">Docker API Access documentation</a></li>\\n<li><a href=\\\"https://docs.traefik.io/routing/routers/\\\">General Router documentation</a></li>\\n<li><a href=\\\"https://docs.traefik.io/routing/providers/docker/#routers\\\">Docker Provider Router configurations</a></li>\\n</ul>\\n<h2>Traefik concepts</h2>\\n<ul>\\n<li>Providers: discover the services that live on the infrastructure (IP, health, ...)</li>\\n<li>Entrypoints: listen for incoming traffic (ports, ...)</li>\\n<li>Routers: analyse the requests (host, path, headers, SSL,...).</li>\\n<li>Services: forward the request to services (load balancing, ...)</li>\\n<li>Middlewares: may update the request or make decisions based on the request (authentication, rate limiting, headers, ...)</li>\\n</ul>\\n<h2>Routers: Connect Requests to Services</h2>\\n<p>A traefik label like <code>traefik.http.routers.&#x3C;router_name>.rule</code>\\ncomplies with a structure of<br>\\n<code>[Docker Service].[Protocol].[Traefik Configuration].[User Defined Name for Config].[Option]</code>  </p>\\n<p>A option of rule just means we are tying a rule to the router, e.g.:  </p>\\n<p><code>traefik.http.routers.whoami.rule=Host(`whoami.localhost`)</code>  </p>\\n<p>or in an equivalent way:  </p>\\n<p><code>traefik.http.routers.whoami.rule=Host(\\\\\\\"whoami.localhost\\\\\\\")</code>  </p>\\n<p>Traefik creates, for each container, a corresponding service and router.\\nThe service automatically gets a server per instance of the container,\\nand the router automatically gets a rule defined by defaultRule (if\\nno rule for it was defined in labels).</p>\\n<p>More examples of router configuration with labels:</p>\\n<ul>\\n<li><code>traefik.http.routers.&#x3C;router_name>.rule</code>:<br>\\n<code>traefik.http.routers.myrouter.rule=Host(`example.com`)</code>  </li>\\n<li><code>traefik.http.routers.&#x3C;router_name>.entrypoints</code>:<br>\\n<code>traefik.http.routers.myrouter.entrypoints=ep1,ep2</code>  </li>\\n<li><code>traefik.http.routers.&#x3C;router_name>.service</code>:<br>\\n<code>traefik.http.routers.myrouter.service=myservice</code>  </li>\\n<li><code>traefik.http.routers.&#x3C;router_name>.tls</code>:<br>\\n<code>traefik.http.routers.myrouter.tls=true</code>  </li>\\n</ul>\\n<h1>Services: Configure how to reach the Application</h1>\\n<ul>\\n<li>Each service has its own Load Balancer. </li>\\n<li>Load Balancers can load balance requests between multiple instances of your application</li>\\n<li>The target of the Load Balancer is an instance of an application and is called a Server.  </li>\\n<li>A Service can be assigned to one of more Routers.</li>\\n</ul>\\n<p>Examples of Service configuration with labels:</p>\\n<ul>\\n<li><code>traefik.http.services.&#x3C;service_name>.loadbalancer.server.port</code>:<br>\\n<code>traefik.http.services.myservice.loadbalancer.server.port=8080</code></li>\\n<li><code>traefik.http.services.&#x3C;service_name>.loadbalancer.passhostheader</code>:<br>\\n<code>traefik.http.services.myservice.loadbalancer.server.passhostheader=true</code></li>\\n<li><code>traefik.http.services.&#x3C;service_name>.loadbalancer.healthcheck.path</code>:<br>\\n<code>traefik.http.services.myservice.loadbalancer.server.healthcheck.path=/foo</code></li>\\n<li><code>traefik.http.services.&#x3C;service_name>.loadbalancer.healthcheck.port</code>:<br>\\n<code>traefik.http.services.myservice.loadbalancer.healthcheck.port=42</code></li>\\n</ul>\\n<p>Docker specific options:</p>\\n<ul>\\n<li><code>traefik.enable</code><br>\\ntells Traefik to override the exposedbyDefault setting for this particular container</li>\\n<li><code>traefik.docker.network</code>\\noverrides the default network used by Traefik</li>\\n</ul>\\n<h1>HTTPS / TLS / Let's Encrypt</h1>\\n<p><a href=\\\"https://docs.traefik.io/v2.3/https/acme/#providers\\\">DNS providers which traefik can handle</a></p>\\n<p>Three ways for traefik to proceed with certificates:  </p>\\n<ul>\\n<li>default certificate  </li>\\n<li>user defined  </li>\\n<li>automated: Traefik uses Let's Encrypt  </li>\\n</ul>\\n<p>Three ways for Let's Encrypt to validate you control the domain name with challenges:  </p>\\n<ul>\\n<li>HTTP challenge</li>\\n<li>DNS challenge</li>\\n<li>TLS challenge</li>\\n</ul>\",\"frontmatter\":{\"title\":\"Traefik\",\"date\":\"October 03, 2021\",\"path\":\"/traefik\",\"tags\":[\"Traefik\"],\"excerpt\":\"\"}}},\"pathContext\":{\"prev\":{\"html\":\"<h2>Links</h2>\\n<ul>\\n<li><a href=\\\"https://cheatography.com/tasjaevan/cheat-sheets/redis/\\\">Cheat sheet</a>  </li>\\n<li><a href=\\\"https://cheatography.com/tasjaevan/cheat-sheets/redis/\\\">Redis commands</a></li>\\n</ul>\\n<h2>Redis configuration</h2>\\n<p><a href=\\\"https://redis.io/topics/notifications#configuration\\\">Documentation on configuration</a></p>\\n<p>Command to get the expired events from Redis:</p>\\n<pre><code>config set notify-keyspace-events AKE\\n</code></pre>\\n<h2>Redis cli commands</h2>\\n<pre><code>set user:1:name 1\\nset user:2:name 2\\nget user:1:name\\nkeys user*\\nscan 0\\ndel user:1:name 1\\nget user:1:name\\nflushddb\\nset a b ex 10\\nget a\\nget a\\nttl a\\nexpire a 60\\nset c d exat 1624737950\\n</code></pre>\\n<h3>xx nx</h3>\\n<pre><code>set e f xx\\nget e\\nset e f nx\\nget e\\nset e g nx\\nget e\\n</code></pre>\\n<h3>incr</h3>\\n<pre><code>set a 1\\nincr a\\nget a\\nflushdb\\nincr bb\\nkeys *\\nget bb\\ndecr bb\\nget b\\nflushdb\\nset a 1.02\\nget a\\nincrbyfloat a .3\\nget a\\nset sam 100\\nincr sam\\nincrby sam 20\\nincrby sam 20\\ndecrby sam 5\\n</code></pre>\\n<pre><code>set user:1:lives 3 ex 1800\\nttl user:1:lives\\ndecr user:1:lives\\ndecr user:1:lives\\ndecr user:1:lives\\nflushdb\\n</code></pre>\\n<h3>Hash</h3>\\n<pre><code>hset user:1 name sam age 10 city atlanta\\nkeys *\\ntype user:1\\nhget user:1 name\\nhget user:1 age\\nhget user:1 city\\nhgetall user:1\\nhset user:2 birthYear 2020 status active\\nexpire user:2 10\\nttl user:2*\\nkeys *\\nhkeys user:1\\nhvals user:1\\nhexists user:1 status\\nhexists user:1 age\\nhgetall user:1\\nhdel user:1 age\\ndel user:1\\nkeys *\\n</code></pre>\\n<h3>List &#x26; Queue</h3>\\n<pre><code>rpush users sam mike jake\\nkeys *\\ntype users\\nllen users\\nlrange users 0 -1\\nlrange users 0 1\\nlpop users\\nllen users\\nrpush 1 2 3 4 5 6\\nllen users\\nkeys *\\nrpush 1 2 3 4 5 6\\nlpop users\\nlpop users 2\\nlrange users 0 -1\\n</code></pre>\\n<h3>List as lifo stack</h3>\\n<pre><code>flushdb\\nrpush users 1 2 3 4 5 6\\nllen users\\nlrange users 0 -1\\nrpop users\\nrpop users\\nrpop users\\nllen users\\nlrange users 0 -1\\nlpush users 4\\nkeys *\\nlpop users\\nlpop users\\nlpop users\\nkeys *\\nllen users\\nlpop users\\nkeys *\\n</code></pre>\\n<h3>Set</h3>\\n<p>A redis set is an unordered collection of unique items (string)\\nsimilar to a Java set.</p>\\n<h4>Use cases</h4>\\n<ul>\\n<li>maintain currently logged in users  </li>\\n<li>maintain blacklisted IP address / users  </li>\\n<li>set intersection  </li>\\n</ul>\\n<h4>Basic commands</h4>\\n<pre><code>sadd users 1 2 3\\nsadd users 4\\nsadd users 5\\nscard users\\nsmembers users\\nsadd users 4.5\\nsadd users 10\\nsmembers users\\nsadd users 1\\nsmembers users\\nsismember users 5\\nsismember users 100\\nsrem users 100\\nsrem users 5\\nsismember users 5\\nsmembers users\\nspop users\\nspop users\\nscard users\\n</code></pre>\\n<h4>Set intersection and union</h4>\\n<pre><code>flushdb\\nsadd skill:java 1 2 3 4\\nsadd skill:js 2 3 4\\nsadd skill:aws 4 5 6\\nsinter skill:java skill:js skill:aws\\nsunion skill:java skill js\\nsadd candidate:criminal 4 5 6\\nsdiff skill:java candidate:criminal\\n</code></pre>\\n<pre><code>sinterstore java-js skill:java skill:js\\nkeys *\\nscard java-js\\nsmembers java-js\\n</code></pre>\",\"id\":\"/home/nicolas/Documents/workshop/src/pages/2021-09-11-redis/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2021-09-11T18:38:00.451Z\",\"path\":\"/redis\",\"title\":\"Redis\",\"excerpt\":\"\",\"tags\":[\"Redis\"]}},\"next\":{\"html\":\"<h3>System parameters</h3>\\n<p>Elasticsearch version and more basic parameters:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200 -u admin:admin --insecure\\n</code></pre>\\n<p>Information on nodes:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/nodes?v -u admin:admin --insecure\\n</code></pre>\\n<p>Integrated plugins:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/plugins?v -u admin:admin --insecure\\n</code></pre>\\n<p>Information on authentication:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_opendistro/_security/authinfo -u admin:admin --insecure\\n</code></pre>\\n<p>Information on cluster:</p>\\n<pre><code class=\\\"language-http\\\">http://localhost:9200/_cluster/settings?include_defaults=true\\n</code></pre>\\n<p>Indices:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/indices -u admin:admin --insecure\\n</code></pre>\\n<h3>Cloning an index from dev tools console:</h3>\\n<pre><code>POST _reindex\\n{\\n  \\\"source\\\": {\\n    \\\"index\\\": \\\"portefeuille\\\"\\n  },\\n  \\\"dest\\\": {\\n    \\\"index\\\": \\\"portefeuille_test_1\\\"\\n  }\\n}\\n</code></pre>\\n<h3>Creating a sample index from dev tools console:</h3>\\n<pre><code>DELETE /bankdata\\n</code></pre>\\n<pre><code>PUT /bankdata\\nPOST /bankdata/1\\n{ \\\"age\\\": 42, \\\"balance\\\": 12000 }\\nPOST /bankdata/2\\n{ \\\"age\\\": 28, \\\"balance\\\": 7000 }\\nPOST /bankdata/3\\n{ \\\"age\\\": 51, \\\"balance\\\": 2300 }\\nPOST /bankdata/4\\n{ \\\"age\\\": 15, \\\"balance\\\": 450 }\\nPOST /bankdata/5\\n{ \\\"age\\\": 33 }\\nPOST /bankdata/6\\n{ \\\"age\\\": 32 }\\nPOST /bankdata/7\\n{ \\\"age\\\": 27 }\\nPOST /bankdata/8\\n{ \\\"age\\\": 79 }\\nPOST /bankdata/9\\n{ \\\"age\\\": 43, balance: null }\\n</code></pre>\\n<pre><code>GET /bankdata\\n</code></pre>\\n<pre><code>GET /bankdata/_search\\n{\\n    \\\"query\\\": {\\n        \\\"match_all\\\": {}\\n    }\\n}\\n</code></pre>\\n<h3>Updating a given field in an index</h3>\\n<pre><code>POST lanturlu_portefeuille/_update_by_query\\n{\\n  \\\"script\\\": {\\n    \\\"lang\\\": \\\"painless\\\",\\n    \\\"source\\\": \\\"\\\"\\\"\\n   try {\\n        String fieldName = 'nom_conseille_pv';\\n        String value = ctx._source[fieldName];\\n        ctx._source[fieldName] = value.replace(\\\" \\\",\\\"_\\\");\\n      }\\n      catch(Exception e) {\\n      }\\n    \\\"\\\"\\\"\\n  }\\n}\\n</code></pre>\\n<h3>Template for indexing a field as a geo_shape</h3>\\n<pre><code>PUT _template/geotemplate_geoshape_dpt\\n{ \\\"index_patterns\\\": [\\n  \\\"index_pattern_title\\\"\\n  ],\\n  \\\"settings\\\": {},\\n    \\\"mappings\\\": {\\n      \\\"properties\\\": {\\n        \\\"wkt\\\" :{\\n          \\\"type\\\": \\\"geo_shape\\\"\\n        }\\n      }\\n    },\\n    \\\"aliases\\\": {}\\n}\\n</code></pre>\\n<h3>Painless language scripts</h3>\\n<pre><code>(((ctx?._source[\\\"MY_PARAMETER\\\"]?:0)?:0)/((ctx?._source[\\\"OtherVariable\\\"]?:1)?:1)?:1)\\n</code></pre>\",\"id\":\"/home/nicolas/Documents/workshop/src/pages/2020-12-03-ELK-4/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2020-12-03T22:01:12.451Z\",\"path\":\"/elk-useful-queries\",\"title\":\"Useful Queries\",\"excerpt\":\"\",\"tags\":[\"Elastic Search\",\"queries\",\"environment variables\",\"system\"]}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---traefik-4f858076d6bc21858307.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Links</h2>\\n<ul>\\n<li><a href=\\\"https://traefik.io/\\\">Traefik labs website</a></li>\\n<li><a href=\\\"https://github.com/56kcloud/traefik-training\\\">Brian Christner 56 k Cloud github link</a></li>\\n<li><a href=\\\"https://docs.traefik.io/providers/docker/#docker-api-access\\\">Docker API Access documentation</a></li>\\n<li><a href=\\\"https://docs.traefik.io/routing/routers/\\\">General Router documentation</a></li>\\n<li><a href=\\\"https://docs.traefik.io/routing/providers/docker/#routers\\\">Docker Provider Router configurations</a></li>\\n</ul>\\n<h2>Traefik concepts</h2>\\n<ul>\\n<li>Providers: discover the services that live on the infrastructure (IP, health, ...)</li>\\n<li>Entrypoints: listen for incoming traffic (ports, ...)</li>\\n<li>Routers: analyse the requests (host, path, headers, SSL,...).</li>\\n<li>Services: forward the request to services (load balancing, ...)</li>\\n<li>Middlewares: may update the request or make decisions based on the request (authentication, rate limiting, headers, ...)</li>\\n</ul>\\n<h2>Routers: Connect Requests to Services</h2>\\n<p>A traefik label like <code>traefik.http.routers.&#x3C;router_name>.rule</code>\\ncomplies with a structure of<br>\\n<code>[Docker Service].[Protocol].[Traefik Configuration].[User Defined Name for Config].[Option]</code>  </p>\\n<p>A option of rule just means we are tying a rule to the router, e.g.:  </p>\\n<p><code>traefik.http.routers.whoami.rule=Host(`whoami.localhost`)</code>  </p>\\n<p>or in an equivalent way:  </p>\\n<p><code>traefik.http.routers.whoami.rule=Host(\\\\\\\"whoami.localhost\\\\\\\")</code>  </p>\\n<p>Traefik creates, for each container, a corresponding service and router.\\nThe service automatically gets a server per instance of the container,\\nand the router automatically gets a rule defined by defaultRule (if\\nno rule for it was defined in labels).</p>\\n<p>More examples of router configuration with labels:</p>\\n<ul>\\n<li><code>traefik.http.routers.&#x3C;router_name>.rule</code>:<br>\\n<code>traefik.http.routers.myrouter.rule=Host(`example.com`)</code>  </li>\\n<li><code>traefik.http.routers.&#x3C;router_name>.entrypoints</code>:<br>\\n<code>traefik.http.routers.myrouter.entrypoints=ep1,ep2</code>  </li>\\n<li><code>traefik.http.routers.&#x3C;router_name>.service</code>:<br>\\n<code>traefik.http.routers.myrouter.service=myservice</code>  </li>\\n<li><code>traefik.http.routers.&#x3C;router_name>.tls</code>:<br>\\n<code>traefik.http.routers.myrouter.tls=true</code>  </li>\\n</ul>\\n<h1>Services: Configure how to reach the Application</h1>\\n<ul>\\n<li>Each service has its own Load Balancer. </li>\\n<li>Load Balancers can load balance requests between multiple instances of your application</li>\\n<li>The target of the Load Balancer is an instance of an application and is called a Server.  </li>\\n<li>A Service can be assigned to one of more Routers.</li>\\n</ul>\\n<p>Examples of Service configuration with labels:</p>\\n<ul>\\n<li><code>traefik.http.services.&#x3C;service_name>.loadbalancer.server.port</code>:<br>\\n<code>traefik.http.services.myservice.loadbalancer.server.port=8080</code></li>\\n<li><code>traefik.http.services.&#x3C;service_name>.loadbalancer.passhostheader</code>:<br>\\n<code>traefik.http.services.myservice.loadbalancer.server.passhostheader=true</code></li>\\n<li><code>traefik.http.services.&#x3C;service_name>.loadbalancer.healthcheck.path</code>:<br>\\n<code>traefik.http.services.myservice.loadbalancer.server.healthcheck.path=/foo</code></li>\\n<li><code>traefik.http.services.&#x3C;service_name>.loadbalancer.healthcheck.port</code>:<br>\\n<code>traefik.http.services.myservice.loadbalancer.healthcheck.port=42</code></li>\\n</ul>\\n<p>Docker specific options:</p>\\n<ul>\\n<li><code>traefik.enable</code><br>\\ntells Traefik to override the exposedbyDefault setting for this particular container</li>\\n<li><code>traefik.docker.network</code>\\noverrides the default network used by Traefik</li>\\n</ul>\\n<h1>HTTPS / TLS / Let's Encrypt</h1>\\n<p><a href=\\\"https://docs.traefik.io/v2.3/https/acme/#providers\\\">DNS providers which traefik can handle</a></p>\\n<p>Three ways for traefik to proceed with certificates:  </p>\\n<ul>\\n<li>default certificate  </li>\\n<li>user defined  </li>\\n<li>automated: Traefik uses Let's Encrypt  </li>\\n</ul>\\n<p>Three ways for Let's Encrypt to validate you control the domain name with challenges:  </p>\\n<ul>\\n<li>HTTP challenge</li>\\n<li>DNS challenge</li>\\n<li>TLS challenge</li>\\n</ul>\",\"frontmatter\":{\"title\":\"Traefik\",\"date\":\"October 03, 2021\",\"path\":\"/traefik\",\"tags\":[\"Traefik\"],\"excerpt\":\"\"}}},\"pathContext\":{\"prev\":{\"html\":\"<h2>Links</h2>\\n<ul>\\n<li><a href=\\\"https://cheatography.com/tasjaevan/cheat-sheets/redis/\\\">Cheat sheet</a>  </li>\\n<li><a href=\\\"https://cheatography.com/tasjaevan/cheat-sheets/redis/\\\">Redis commands</a></li>\\n</ul>\\n<h2>Redis configuration</h2>\\n<p><a href=\\\"https://redis.io/topics/notifications#configuration\\\">Documentation on configuration</a></p>\\n<p>Command to get the expired events from Redis:</p>\\n<pre><code>config set notify-keyspace-events AKE\\n</code></pre>\\n<h2>Redis cli commands</h2>\\n<pre><code>set user:1:name 1\\nset user:2:name 2\\nget user:1:name\\nkeys user*\\nscan 0\\ndel user:1:name 1\\nget user:1:name\\nflushddb\\nset a b ex 10\\nget a\\nget a\\nttl a\\nexpire a 60\\nset c d exat 1624737950\\n</code></pre>\\n<h3>xx nx</h3>\\n<pre><code>set e f xx\\nget e\\nset e f nx\\nget e\\nset e g nx\\nget e\\n</code></pre>\\n<h3>incr</h3>\\n<pre><code>set a 1\\nincr a\\nget a\\nflushdb\\nincr bb\\nkeys *\\nget bb\\ndecr bb\\nget b\\nflushdb\\nset a 1.02\\nget a\\nincrbyfloat a .3\\nget a\\nset sam 100\\nincr sam\\nincrby sam 20\\nincrby sam 20\\ndecrby sam 5\\n</code></pre>\\n<pre><code>set user:1:lives 3 ex 1800\\nttl user:1:lives\\ndecr user:1:lives\\ndecr user:1:lives\\ndecr user:1:lives\\nflushdb\\n</code></pre>\\n<h3>Hash</h3>\\n<pre><code>hset user:1 name sam age 10 city atlanta\\nkeys *\\ntype user:1\\nhget user:1 name\\nhget user:1 age\\nhget user:1 city\\nhgetall user:1\\nhset user:2 birthYear 2020 status active\\nexpire user:2 10\\nttl user:2*\\nkeys *\\nhkeys user:1\\nhvals user:1\\nhexists user:1 status\\nhexists user:1 age\\nhgetall user:1\\nhdel user:1 age\\ndel user:1\\nkeys *\\n</code></pre>\\n<h3>List &#x26; Queue</h3>\\n<pre><code>rpush users sam mike jake\\nkeys *\\ntype users\\nllen users\\nlrange users 0 -1\\nlrange users 0 1\\nlpop users\\nllen users\\nrpush 1 2 3 4 5 6\\nllen users\\nkeys *\\nrpush 1 2 3 4 5 6\\nlpop users\\nlpop users 2\\nlrange users 0 -1\\n</code></pre>\\n<h3>List as lifo stack</h3>\\n<pre><code>flushdb\\nrpush users 1 2 3 4 5 6\\nllen users\\nlrange users 0 -1\\nrpop users\\nrpop users\\nrpop users\\nllen users\\nlrange users 0 -1\\nlpush users 4\\nkeys *\\nlpop users\\nlpop users\\nlpop users\\nkeys *\\nllen users\\nlpop users\\nkeys *\\n</code></pre>\\n<h3>Set</h3>\\n<p>A redis set is an unordered collection of unique items (string)\\nsimilar to a Java set.</p>\\n<h4>Use cases</h4>\\n<ul>\\n<li>maintain currently logged in users  </li>\\n<li>maintain blacklisted IP address / users  </li>\\n<li>set intersection  </li>\\n</ul>\\n<h4>Basic commands</h4>\\n<pre><code>sadd users 1 2 3\\nsadd users 4\\nsadd users 5\\nscard users\\nsmembers users\\nsadd users 4.5\\nsadd users 10\\nsmembers users\\nsadd users 1\\nsmembers users\\nsismember users 5\\nsismember users 100\\nsrem users 100\\nsrem users 5\\nsismember users 5\\nsmembers users\\nspop users\\nspop users\\nscard users\\n</code></pre>\\n<h4>Set intersection and union</h4>\\n<pre><code>flushdb\\nsadd skill:java 1 2 3 4\\nsadd skill:js 2 3 4\\nsadd skill:aws 4 5 6\\nsinter skill:java skill:js skill:aws\\nsunion skill:java skill js\\nsadd candidate:criminal 4 5 6\\nsdiff skill:java candidate:criminal\\n</code></pre>\\n<pre><code>sinterstore java-js skill:java skill:js\\nkeys *\\nscard java-js\\nsmembers java-js\\n</code></pre>\",\"id\":\"/home/nicolas/Documents/workshop/src/pages/2021-09-11-redis/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2021-09-11T18:38:00.451Z\",\"path\":\"/redis\",\"title\":\"Redis\",\"excerpt\":\"\",\"tags\":[\"Redis\"]}},\"next\":{\"html\":\"<h3>System parameters</h3>\\n<p>Elasticsearch version and more basic parameters:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200 -u admin:admin --insecure\\n</code></pre>\\n<p>Information on nodes:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/nodes?v -u admin:admin --insecure\\n</code></pre>\\n<p>Integrated plugins:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/plugins?v -u admin:admin --insecure\\n</code></pre>\\n<p>Information on authentication:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_opendistro/_security/authinfo -u admin:admin --insecure\\n</code></pre>\\n<p>Information on cluster:</p>\\n<pre><code class=\\\"language-http\\\">http://localhost:9200/_cluster/settings?include_defaults=true\\n</code></pre>\\n<p>Indices:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/indices -u admin:admin --insecure\\n</code></pre>\\n<h3>Cloning an index from dev tools console:</h3>\\n<pre><code>POST _reindex\\n{\\n  \\\"source\\\": {\\n    \\\"index\\\": \\\"portefeuille\\\"\\n  },\\n  \\\"dest\\\": {\\n    \\\"index\\\": \\\"portefeuille_test_1\\\"\\n  }\\n}\\n</code></pre>\\n<h3>Creating a sample index from dev tools console:</h3>\\n<pre><code>DELETE /bankdata\\n</code></pre>\\n<pre><code>PUT /bankdata\\nPOST /bankdata/1\\n{ \\\"age\\\": 42, \\\"balance\\\": 12000 }\\nPOST /bankdata/2\\n{ \\\"age\\\": 28, \\\"balance\\\": 7000 }\\nPOST /bankdata/3\\n{ \\\"age\\\": 51, \\\"balance\\\": 2300 }\\nPOST /bankdata/4\\n{ \\\"age\\\": 15, \\\"balance\\\": 450 }\\nPOST /bankdata/5\\n{ \\\"age\\\": 33 }\\nPOST /bankdata/6\\n{ \\\"age\\\": 32 }\\nPOST /bankdata/7\\n{ \\\"age\\\": 27 }\\nPOST /bankdata/8\\n{ \\\"age\\\": 79 }\\nPOST /bankdata/9\\n{ \\\"age\\\": 43, balance: null }\\n</code></pre>\\n<pre><code>GET /bankdata\\n</code></pre>\\n<pre><code>GET /bankdata/_search\\n{\\n    \\\"query\\\": {\\n        \\\"match_all\\\": {}\\n    }\\n}\\n</code></pre>\\n<h3>Updating a given field in an index</h3>\\n<pre><code>POST lanturlu_portefeuille/_update_by_query\\n{\\n  \\\"script\\\": {\\n    \\\"lang\\\": \\\"painless\\\",\\n    \\\"source\\\": \\\"\\\"\\\"\\n   try {\\n        String fieldName = 'nom_conseille_pv';\\n        String value = ctx._source[fieldName];\\n        ctx._source[fieldName] = value.replace(\\\" \\\",\\\"_\\\");\\n      }\\n      catch(Exception e) {\\n      }\\n    \\\"\\\"\\\"\\n  }\\n}\\n</code></pre>\\n<h3>Template for indexing a field as a geo_shape</h3>\\n<pre><code>PUT _template/geotemplate_geoshape_dpt\\n{ \\\"index_patterns\\\": [\\n  \\\"index_pattern_title\\\"\\n  ],\\n  \\\"settings\\\": {},\\n    \\\"mappings\\\": {\\n      \\\"properties\\\": {\\n        \\\"wkt\\\" :{\\n          \\\"type\\\": \\\"geo_shape\\\"\\n        }\\n      }\\n    },\\n    \\\"aliases\\\": {}\\n}\\n</code></pre>\\n<h3>Painless language scripts</h3>\\n<pre><code>(((ctx?._source[\\\"MY_PARAMETER\\\"]?:0)?:0)/((ctx?._source[\\\"OtherVariable\\\"]?:1)?:1)?:1)\\n</code></pre>\",\"id\":\"/home/nicolas/Documents/workshop/src/pages/2020-12-03-ELK-4/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2020-12-03T22:01:12.451Z\",\"path\":\"/elk-useful-queries\",\"title\":\"Useful Queries\",\"excerpt\":\"\",\"tags\":[\"Elastic Search\",\"queries\",\"environment variables\",\"system\"]}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/traefik.json\n// module id = 494\n// module chunks = 86452829880231"],"sourceRoot":""}