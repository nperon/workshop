{"version":3,"sources":["webpack:///path---oauth-2-in-spring-boot-0cf8ee627c645db7f9db.js","webpack:///./.cache/json/oauth-2-in-spring-boot.json"],"names":["webpackJsonp","425","module","exports","data","markdownRemark","html","frontmatter","title","date","path","tags","excerpt","pathContext","prev","id","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,ooFAAk8EC,aAA8NC,MAAA,2BAAAC,KAAA,oBAAAC,KAAA,yBAAAC,MAAA,uEAAAC,QAAA,MAA4LC,aAAgBC,MAAQR,KAAA,y8CAA8+CS,GAAA,yGAAAR,aAA+IE,KAAA,2BAAAC,KAAA,iBAAAF,MAAA,eAAAI,QAAA,GAAAD,MAAA,mCAAwIK,MAASV,KAAA,64DAA6+BS,GAAA,+GAAAR,aAAskCE,KAAA,2BAAAC,KAAA,eAAAF,MAAA,cAAAI,QAAA,GAAAD,MAAA","file":"path---oauth-2-in-spring-boot-0cf8ee627c645db7f9db.js","sourcesContent":["webpackJsonp([186373792209034],{\n\n/***/ 425:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h3>OAuth 2.0 in Spring Security 5</h3>\\n<p>The legacy <a href=\\\"https://github.com/spring-projects/spring-security-oauth\\\">Spring Security OAuth Project</a> includes support for implementing all of the three roles involved in OAuth: Client, Resource Server and Authorization Server. However, that project is now deprecated and to be maintained only for a limited time\\nuntil not later than may 2022. </p>\\n<p>The new OAuth 2 project (<a href=\\\"https://github.com/spring-projects-experimental/spring-authorization-server\\\">https://github.com/spring-projects-experimental/spring-authorization-server</a>)\\nwhich is part of Spring Security 5 is already available but not fully developed as yet. A\\nclient and a resource server are already available. However,\\nthe <a href=\\\"https://github.com/spring-projects-experimental/spring-authorization-server\\\">authorization server</a> project is not completed as of december 2020. </p>\\n<h3>The two types of clients</h3>\\n<p>Client applications can be split into two categories: </p>\\n<ul>\\n<li>confidential clients where the client secret is kept safe.</li>\\n<li>public clients which cannot keep their client id and client secret safe. It is the case of\\napplications which are browser based like pure front end javascript applications. It is also\\nthe case of some native applications stored in smartphones. It is the case of any application\\nwhose code can be viewed or decompiled.</li>\\n</ul>\\n<h2>The different grant types i.e. ways an application gets an access token</h2>\\n<p>Authorization code and Client credentials are the most common grant types. Implicit flow and Password grant are two other grant types of Oauth 2 which are now deprecated. There are now two additional possible grant types which can be relevant in some types of applications: PKCE Enhanced authorization code and Device code. Note that PKCE stands for Proof Key for Code Exchange.</p>\\n<p>Here are five different types of applications with their relevant grant types:</p>\\n<ul>\\n<li>Server Side Web Apps: <strong>Authorisation Code</strong> ; Password grant (deprecated).</li>\\n<li>Server Side Script with no UI : <strong>Client Credentials</strong></li>\\n<li>Javascript Single Page Application with no back end: <strong>PKCE Enhanced Authorization Code</strong>; Implicit Flow (deprecated) ; Password Grant (deprecated).</li>\\n<li>Mobile native app : <strong>Authorization Code</strong>; <strong>PKCE Enhanced Authorization Code</strong> ; Implicit Flow (deprecated) ; Password Grant (deprecated).</li>\\n<li>Device : <strong>Device Code</strong>.</li>\\n</ul>\\n<p>Finally, Refresh Token is an additional Grant Type where a refresh token is exchanged for an access token.</p>\",\"frontmatter\":{\"title\":\"Oauth 2.0 in Spring Boot\",\"date\":\"November 15, 2020\",\"path\":\"/oauth2-in-spring-boot\",\"tags\":[\"web security\",\"OAuth 2.0\",\"Spring Boot\",\"Spring Security\",\"Spring 5\"],\"excerpt\":\"\"}}},\"pathContext\":{\"prev\":{\"html\":\"<h3>Aggregations, buckets and metrics</h3>\\n<p>Bucket by rating value:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET '127.0.0.1:9200/ratings/_search?size=0&#x26;pretty' -d '\\n{\\n    \\\"aggs\\\": {\\n        \\\"ratings\\\": {\\n            \\\"terms\\\": {\\n                \\\"field\\\": \\\"rating\\\"\\n            }\\n        }\\n    }\\n}'\\n</code></pre>\\n<p>Count only 5-start ratings:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET '127.0.0.1:9200/ratings/_search?size=0&#x26;pretty' -d '\\n{\\n    \\\"query\\\": {\\n        \\\"match\\\": {\\n            \\\"rating\\\": 5.0\\n        }\\n    },\\n    \\\"aggs\\\": {\\n        \\\"ratings\\\": {\\n            \\\"terms\\\": {\\n                \\\"field\\\": \\\"rating\\\"\\n            }\\n        }\\n    }\\n}'\\n</code></pre>\\n<p>Average rating for Star Wars:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET '127.0.0.1:9200/ratings/_search?size=0&#x26;pretty' -d '\\n{\\n    \\\"query\\\": {\\n        \\\"match_phrase\\\": {\\n            \\\"title\\\": \\\"Star Wars Episode IV\\\"\\n        }\\n    },\\n    \\\"aggs\\\": {\\n        \\\"avg_rating\\\": {\\n            \\\"avg\\\": {\\n                \\\"field\\\": \\\"rating\\\"\\n            }\\n        }\\n    }\\n}'\\n</code></pre>\\n<h3>Histograms</h3>\\n<p>Display ratings by 1.0-rating intervals</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET '127.0.0.1:9200/ratings/_search?size=0&#x26;pretty' -d '\\n{\\n    \\\"aggs\\\": {\\n        \\\"whole_rating\\\": {\\n            \\\"histogram\\\": {\\n                \\\"field\\\": \\\"rating\\\",\\n                \\\"interval\\\": 1.0\\n            }\\n        }\\n    }\\n}'\\n</code></pre>\",\"id\":\"/home/nicolas/projects/workshop/src/pages/2020-08-29-ELK-3/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2020-08-29T22:47:32.235Z\",\"path\":\"/elk-searching\",\"title\":\"Aggregations\",\"excerpt\":\"\",\"tags\":[\"Elastic Search\",\"aggregations\"]}},\"next\":{\"html\":\"<h3>vi</h3>\\n<p>Vi command for eliminating all occurences of colon \\\":\\\" is the following:</p>\\n<pre><code>:1,$s/://g\\n</code></pre>\\n<p>Here is the vi command for replacing all occurences of \\\"old\\\" with \\\"new\\\":</p>\\n<pre><code>:1,$s/old/new/g\\n</code></pre>\\n<p>Vi command for searching string \\\"xyz\\\":</p>\\n<pre><code>/xyz\\n</code></pre>\\n<h3>find</h3>\\n<p>File search:</p>\\n<pre><code class=\\\"language-bash\\\">find ./fvsa/ -name \\\"pvsve*\\\"\\n</code></pre>\\n<h3>grep</h3>\\n<p>Search string 'yourDir' in dir yourdir:</p>\\n<pre><code class=\\\"language-bash\\\">grep -nr 'yourString*' yourdir\\n</code></pre>\\n<h3>Memory usage with watch</h3>\\n<pre><code class=\\\"language-bash\\\">watch -n 5 free -m\\n</code></pre>\\n<h3>Modify filenames with rename</h3>\\n<p>Delete 4 first characters in all file names in dir:</p>\\n<pre><code class=\\\"language-bash\\\">rename 's/.{4}(.*)/$1/' *\\n</code></pre>\\n<p>Delete 5 last characters in all file names in dir:</p>\\n<pre><code class=\\\"language-bash\\\">rename 's/(.*).{5}/$1/' *\\n</code></pre>\\n<h3>wc</h3>\\n<p>Display total number of files in 'folder':</p>\\n<pre><code class=\\\"language-bash\\\">ls folder | wc -l\\n</code></pre>\\n<h3>Disk usage</h3>\\n<pre><code class=\\\"language-bash\\\">sudo ncdu -rx /\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">sudo du -shc /*\\n</code></pre>\\n<p>Displaying size occupied by Documents directory:</p>\\n<pre><code class=\\\"language-bash\\\">cd ~\\nsudo du -sh Documents\\n</code></pre>\\n<h3>Managing JDKs on Debian</h3>\\n<pre><code class=\\\"language-bash\\\">update-java-alternatives -l\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">sudo update-java-alternatives -s java-1.8.0-openjdk-amd64\\n</code></pre>\\n<p>Or in a more interactive way:</p>\\n<pre><code class=\\\"language-bash\\\">update-alternatives --config java\\n</code></pre>\\n<h3>Managing screens</h3>\\n<pre><code class=\\\"language-bash\\\">xrandr\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">xrandr --addmode HDMI-1 2560x1080\\n</code></pre>\",\"id\":\"/home/nicolas/projects/workshop/src/pages/2020-10-11-linux-utils/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2020-10-11T22:47:32.235Z\",\"path\":\"/linux-utils\",\"title\":\"Linux Utils\",\"excerpt\":\"\",\"tags\":[\"Linux\",\"utils\",\"bash\",\"vi\",\"find\",\"grep\",\"rename\"]}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---oauth-2-in-spring-boot-0cf8ee627c645db7f9db.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h3>OAuth 2.0 in Spring Security 5</h3>\\n<p>The legacy <a href=\\\"https://github.com/spring-projects/spring-security-oauth\\\">Spring Security OAuth Project</a> includes support for implementing all of the three roles involved in OAuth: Client, Resource Server and Authorization Server. However, that project is now deprecated and to be maintained only for a limited time\\nuntil not later than may 2022. </p>\\n<p>The new OAuth 2 project (<a href=\\\"https://github.com/spring-projects-experimental/spring-authorization-server\\\">https://github.com/spring-projects-experimental/spring-authorization-server</a>)\\nwhich is part of Spring Security 5 is already available but not fully developed as yet. A\\nclient and a resource server are already available. However,\\nthe <a href=\\\"https://github.com/spring-projects-experimental/spring-authorization-server\\\">authorization server</a> project is not completed as of december 2020. </p>\\n<h3>The two types of clients</h3>\\n<p>Client applications can be split into two categories: </p>\\n<ul>\\n<li>confidential clients where the client secret is kept safe.</li>\\n<li>public clients which cannot keep their client id and client secret safe. It is the case of\\napplications which are browser based like pure front end javascript applications. It is also\\nthe case of some native applications stored in smartphones. It is the case of any application\\nwhose code can be viewed or decompiled.</li>\\n</ul>\\n<h2>The different grant types i.e. ways an application gets an access token</h2>\\n<p>Authorization code and Client credentials are the most common grant types. Implicit flow and Password grant are two other grant types of Oauth 2 which are now deprecated. There are now two additional possible grant types which can be relevant in some types of applications: PKCE Enhanced authorization code and Device code. Note that PKCE stands for Proof Key for Code Exchange.</p>\\n<p>Here are five different types of applications with their relevant grant types:</p>\\n<ul>\\n<li>Server Side Web Apps: <strong>Authorisation Code</strong> ; Password grant (deprecated).</li>\\n<li>Server Side Script with no UI : <strong>Client Credentials</strong></li>\\n<li>Javascript Single Page Application with no back end: <strong>PKCE Enhanced Authorization Code</strong>; Implicit Flow (deprecated) ; Password Grant (deprecated).</li>\\n<li>Mobile native app : <strong>Authorization Code</strong>; <strong>PKCE Enhanced Authorization Code</strong> ; Implicit Flow (deprecated) ; Password Grant (deprecated).</li>\\n<li>Device : <strong>Device Code</strong>.</li>\\n</ul>\\n<p>Finally, Refresh Token is an additional Grant Type where a refresh token is exchanged for an access token.</p>\",\"frontmatter\":{\"title\":\"Oauth 2.0 in Spring Boot\",\"date\":\"November 15, 2020\",\"path\":\"/oauth2-in-spring-boot\",\"tags\":[\"web security\",\"OAuth 2.0\",\"Spring Boot\",\"Spring Security\",\"Spring 5\"],\"excerpt\":\"\"}}},\"pathContext\":{\"prev\":{\"html\":\"<h3>Aggregations, buckets and metrics</h3>\\n<p>Bucket by rating value:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET '127.0.0.1:9200/ratings/_search?size=0&#x26;pretty' -d '\\n{\\n    \\\"aggs\\\": {\\n        \\\"ratings\\\": {\\n            \\\"terms\\\": {\\n                \\\"field\\\": \\\"rating\\\"\\n            }\\n        }\\n    }\\n}'\\n</code></pre>\\n<p>Count only 5-start ratings:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET '127.0.0.1:9200/ratings/_search?size=0&#x26;pretty' -d '\\n{\\n    \\\"query\\\": {\\n        \\\"match\\\": {\\n            \\\"rating\\\": 5.0\\n        }\\n    },\\n    \\\"aggs\\\": {\\n        \\\"ratings\\\": {\\n            \\\"terms\\\": {\\n                \\\"field\\\": \\\"rating\\\"\\n            }\\n        }\\n    }\\n}'\\n</code></pre>\\n<p>Average rating for Star Wars:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET '127.0.0.1:9200/ratings/_search?size=0&#x26;pretty' -d '\\n{\\n    \\\"query\\\": {\\n        \\\"match_phrase\\\": {\\n            \\\"title\\\": \\\"Star Wars Episode IV\\\"\\n        }\\n    },\\n    \\\"aggs\\\": {\\n        \\\"avg_rating\\\": {\\n            \\\"avg\\\": {\\n                \\\"field\\\": \\\"rating\\\"\\n            }\\n        }\\n    }\\n}'\\n</code></pre>\\n<h3>Histograms</h3>\\n<p>Display ratings by 1.0-rating intervals</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET '127.0.0.1:9200/ratings/_search?size=0&#x26;pretty' -d '\\n{\\n    \\\"aggs\\\": {\\n        \\\"whole_rating\\\": {\\n            \\\"histogram\\\": {\\n                \\\"field\\\": \\\"rating\\\",\\n                \\\"interval\\\": 1.0\\n            }\\n        }\\n    }\\n}'\\n</code></pre>\",\"id\":\"/home/nicolas/projects/workshop/src/pages/2020-08-29-ELK-3/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2020-08-29T22:47:32.235Z\",\"path\":\"/elk-searching\",\"title\":\"Aggregations\",\"excerpt\":\"\",\"tags\":[\"Elastic Search\",\"aggregations\"]}},\"next\":{\"html\":\"<h3>vi</h3>\\n<p>Vi command for eliminating all occurences of colon \\\":\\\" is the following:</p>\\n<pre><code>:1,$s/://g\\n</code></pre>\\n<p>Here is the vi command for replacing all occurences of \\\"old\\\" with \\\"new\\\":</p>\\n<pre><code>:1,$s/old/new/g\\n</code></pre>\\n<p>Vi command for searching string \\\"xyz\\\":</p>\\n<pre><code>/xyz\\n</code></pre>\\n<h3>find</h3>\\n<p>File search:</p>\\n<pre><code class=\\\"language-bash\\\">find ./fvsa/ -name \\\"pvsve*\\\"\\n</code></pre>\\n<h3>grep</h3>\\n<p>Search string 'yourDir' in dir yourdir:</p>\\n<pre><code class=\\\"language-bash\\\">grep -nr 'yourString*' yourdir\\n</code></pre>\\n<h3>Memory usage with watch</h3>\\n<pre><code class=\\\"language-bash\\\">watch -n 5 free -m\\n</code></pre>\\n<h3>Modify filenames with rename</h3>\\n<p>Delete 4 first characters in all file names in dir:</p>\\n<pre><code class=\\\"language-bash\\\">rename 's/.{4}(.*)/$1/' *\\n</code></pre>\\n<p>Delete 5 last characters in all file names in dir:</p>\\n<pre><code class=\\\"language-bash\\\">rename 's/(.*).{5}/$1/' *\\n</code></pre>\\n<h3>wc</h3>\\n<p>Display total number of files in 'folder':</p>\\n<pre><code class=\\\"language-bash\\\">ls folder | wc -l\\n</code></pre>\\n<h3>Disk usage</h3>\\n<pre><code class=\\\"language-bash\\\">sudo ncdu -rx /\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">sudo du -shc /*\\n</code></pre>\\n<p>Displaying size occupied by Documents directory:</p>\\n<pre><code class=\\\"language-bash\\\">cd ~\\nsudo du -sh Documents\\n</code></pre>\\n<h3>Managing JDKs on Debian</h3>\\n<pre><code class=\\\"language-bash\\\">update-java-alternatives -l\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">sudo update-java-alternatives -s java-1.8.0-openjdk-amd64\\n</code></pre>\\n<p>Or in a more interactive way:</p>\\n<pre><code class=\\\"language-bash\\\">update-alternatives --config java\\n</code></pre>\\n<h3>Managing screens</h3>\\n<pre><code class=\\\"language-bash\\\">xrandr\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">xrandr --addmode HDMI-1 2560x1080\\n</code></pre>\",\"id\":\"/home/nicolas/projects/workshop/src/pages/2020-10-11-linux-utils/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2020-10-11T22:47:32.235Z\",\"path\":\"/linux-utils\",\"title\":\"Linux Utils\",\"excerpt\":\"\",\"tags\":[\"Linux\",\"utils\",\"bash\",\"vi\",\"find\",\"grep\",\"rename\"]}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/oauth-2-in-spring-boot.json\n// module id = 425\n// module chunks = 186373792209034"],"sourceRoot":""}