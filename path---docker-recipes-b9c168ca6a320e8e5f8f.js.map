{"version":3,"sources":["webpack:///path---docker-recipes-b9c168ca6a320e8e5f8f.js","webpack:///./.cache/json/docker-recipes.json"],"names":["webpackJsonp","414","module","exports","data","markdownRemark","html","frontmatter","title","date","path","tags","excerpt","pathContext","prev","id","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,k5DAAAC,aAAk7DC,MAAA,iBAAAC,KAAA,iBAAAC,KAAA,kBAAAC,MAAA,+BAAAC,QAAA,yBAAmJC,aAAgBC,MAAQR,KAAA,ipFAAulFS,GAAA,0GAAAR,aAA2RE,KAAA,2BAAAC,KAAA,sBAAAF,MAAA,iBAAAI,QAAA,GAAAD,MAAA,+DAA2KK,MAASV,KAAA,yxGAAywGS,GAAA,4GAAAR,aAAuJE,KAAA,2BAAAC,KAAA,WAAAF,MAAA,YAAAI,QAAA,GAAAD,MAAA","file":"path---docker-recipes-b9c168ca6a320e8e5f8f.js","sourcesContent":["webpackJsonp([136351407110125],{\n\n/***/ 414:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h3>Create a container with a mongo database and connect to it</h3>\\n<p>Start with displaying all currently running containers:</p>\\n<pre><code class=\\\"language-bash\\\">docker ps\\n</code></pre>\\n<p>Then create locally the container associated with the mongo docker image:</p>\\n<pre><code class=\\\"language-bash\\\">docker run -p 27017:27017 -d mongo\\n</code></pre>\\n<p>Executing another time <code>docker ps</code> results in information on the created container like the following being displayed:</p>\\n<pre><code>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                      NAMES\\n2c6a61aba41b        mongo               \\\"docker-entrypoint.sâ€¦\\\"   3 minutes ago       Up 3 minutes        0.0.0.0:27017->27017/tcp   clever_dubinsky\\n</code></pre>\\n<p>Connection to the database at url localhost:27017 can be opened using for instance the robo-3t nosql database editor.\\nFinally, the container when not needed anymore can be stopped with:</p>\\n<pre><code>docker stop 2c6a61aba41b\\n</code></pre>\\n<h3>Create a container with a PostgreSQL database given the database name and the user credentials</h3>\\n<p>Let us assume we need to connect to a database called course_data in a PostgreSQL SGBD with the following credentials: the user is postgres and the password is password. The command line to launch a docker container with such a database is:</p>\\n<pre><code class=\\\"language-bash\\\">docker run --name postgresdb -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password -e POSTGRES_DB=course_data -d -p 5432:5432 postgres\\n</code></pre>\\n<p>Terminal access to the database prompt is obtained by first accessing the container shell:</p>\\n<pre><code class=\\\"language-bash\\\">docker container exec -it postgresdb bash\\n</code></pre>\\n<p>The postgre prompt of user 'postgres' may then be accessed with:</p>\\n<pre><code class=\\\"language-bash\\\">psql course_data postgres\\n</code></pre>\",\"frontmatter\":{\"title\":\"Docker Recipes\",\"date\":\"March 31, 2020\",\"path\":\"/docker-recipes\",\"tags\":[\"docker\",\"container\",\"devops\"],\"excerpt\":\"Some Docker Recipes\"}}},\"pathContext\":{\"prev\":{\"html\":\"<h3>System parameters</h3>\\n<p>Elasticsearch version and more basic parameters:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200 -u admin:admin --insecure\\n</code></pre>\\n<p>Information on nodes:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/nodes?v -u admin:admin --insecure\\n</code></pre>\\n<p>Integrated plugins:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/plugins?v -u admin:admin --insecure\\n</code></pre>\\n<p>Information on authentication:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_opendistro/_security/authinfo -u admin:admin --insecure\\n</code></pre>\\n<p>Information on cluster:</p>\\n<pre><code class=\\\"language-http\\\">http://localhost:9200/_cluster/settings?include_defaults=true\\n</code></pre>\\n<p>Indices:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/indices -u admin:admin --insecure\\n</code></pre>\\n<h3>Cloning an index from dev tools console:</h3>\\n<pre><code>POST _reindex\\n{\\n  \\\"source\\\": {\\n    \\\"index\\\": \\\"portefeuille\\\"\\n  },\\n  \\\"dest\\\": {\\n    \\\"index\\\": \\\"portefeuille_test_1\\\"\\n  }\\n}\\n</code></pre>\\n<h3>Creating a sample index from dev tools console:</h3>\\n<pre><code>DELETE /bankdata\\n</code></pre>\\n<pre><code>PUT /bankdata\\nPOST /bankdata/1\\n{ \\\"age\\\": 42, \\\"balance\\\": 12000 }\\nPOST /bankdata/2\\n{ \\\"age\\\": 28, \\\"balance\\\": 7000 }\\nPOST /bankdata/3\\n{ \\\"age\\\": 51, \\\"balance\\\": 2300 }\\nPOST /bankdata/4\\n{ \\\"age\\\": 15, \\\"balance\\\": 450 }\\nPOST /bankdata/5\\n{ \\\"age\\\": 33 }\\nPOST /bankdata/6\\n{ \\\"age\\\": 32 }\\nPOST /bankdata/7\\n{ \\\"age\\\": 27 }\\nPOST /bankdata/8\\n{ \\\"age\\\": 79 }\\nPOST /bankdata/9\\n{ \\\"age\\\": 43, balance: null }\\n</code></pre>\\n<pre><code>GET /bankdata\\n</code></pre>\\n<pre><code>GET /bankdata/_search\\n{\\n    \\\"query\\\": {\\n        \\\"match_all\\\": {}\\n    }\\n}\\n</code></pre>\\n<h3>Updating a given field in an index</h3>\\n<pre><code>POST agrial_portefeuille/_update_by_query\\n{\\n  \\\"script\\\": {\\n    \\\"lang\\\": \\\"painless\\\",\\n    \\\"source\\\": \\\"\\\"\\\"\\n   try {\\n        String fieldName = 'nom_conseille_pv';\\n        String value = ctx._source[fieldName];\\n        ctx._source[fieldName] = value.replace(\\\" \\\",\\\"_\\\");\\n      }\\n      catch(Exception e) {\\n      }\\n    \\\"\\\"\\\"\\n  }\\n}\\n</code></pre>\\n<h3>Template for indexing a field as a geo_shape</h3>\\n<pre><code>PUT _template/geotemplate_geoshape_dpt\\n{ \\\"index_patterns\\\": [\\n  \\\"index_pattern_title\\\"\\n  ],\\n  \\\"settings\\\": {},\\n    \\\"mappings\\\": {\\n      \\\"properties\\\": {\\n        \\\"wkt\\\" :{\\n          \\\"type\\\": \\\"geo_shape\\\"\\n        }\\n      }\\n    },\\n    \\\"aliases\\\": {}\\n}\\n</code></pre>\\n<h3>Painless language scripts</h3>\\n<pre><code>(((ctx?._source[\\\"SURF_PARC\\\"]?:0)?:0)/((ctx?._source[\\\"Bovin\\\"]?:1)?:1)?:1)\\n</code></pre>\",\"id\":\"/home/nicolas/Documents/workshop/src/pages/2020-12-03-ELK-4/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2020-12-03T22:01:12.451Z\",\"path\":\"/elk-useful-queries\",\"title\":\"Useful Queries\",\"excerpt\":\"\",\"tags\":[\"Elastic Search\",\"queries\",\"environment variables\",\"system\"]}},\"next\":{\"html\":\"<h2>Udemy course repository</h2>\\n<pre><code class=\\\"language-bash\\\">git clone git@github.com:vp-online-courses/webpack-tutorial.git\\ncd webpack-tutorial\\n</code></pre>\\n<h2>Starting a webpack project</h2>\\n<pre><code class=\\\"language-bash\\\">npm install webpack webpack-cli --save-dev\\nnpx webpack\\nnpx webpack --stats detailed\\ntouch webpack.config.js\\nnpm run build\\n</code></pre>\\n<h2>Types of asset modules</h2>\\n<ul>\\n<li>asset/resource: emits the file into the output folder and exports the url to that file. Use examples: large images or large font files.</li>\\n<li>asset/inline: inlines the file in the bundle as a data uri without adding a new file in the output folder. Use examples: small pieces of data like svg.</li>\\n<li>asset: a combination of asset/resource and asset/inline (8 kB is the default size limit)</li>\\n<li>asset/source: plain text data. Inject the text as it is in the file into the javascript bundle as a string of text.</li>\\n</ul>\\n<h2>Loaders</h2>\\n<pre><code class=\\\"language-bash\\\">npm install css-loader style-loader --save-dev\\nnpm install sass-loader node-sass --save-dev\\nnpm install @babel/core babel-loader @babel/preset-env @babel/plugin-proposal-class-properties --save-dev\\n</code></pre>\\n<h2>A config file example</h2>\\n<p>The following is an example of a webpack.config.js content followed with\\nthe corresponding index.html file. Additionaly, a file named <code>./src/index.js</code> is\\nexpected as the entry point of the app.</p>\\n<pre><code class=\\\"language-js\\\">const path = require('path');\\n\\nmodule.exports = {\\n    entry: './src/index.js',\\n    output: {\\n        filename: 'bundle.js',\\n        path: path.resolve(__dirname, './dist'),\\n        publicPath: 'dist/'\\n    },\\n    mode: 'none',\\n    module: {\\n        rules: [\\n            {\\n                test: /\\\\.(png|jpg)$/,\\n                type: 'asset',\\n                parser: {\\n                    dataUrlCondition: {\\n                        maxSize: 3 * 1024 // 3 kilobytes\\n                    }\\n                }\\n            },\\n            {\\n                test: /\\\\.txt/,\\n                type: 'asset/source'\\n            },\\n            {\\n                test: /\\\\.css$/,\\n                use: [\\n                    'style-loader', 'css-loader'\\n                ]\\n            },\\n            {\\n                test: /\\\\.scss$/,\\n                use: [\\n                    'style-loader', 'css-loader', 'sass-loader'\\n                ]\\n            },\\n            {\\n                test: /\\\\.js$/,\\n                exclude: /node_modules/,\\n                use: {\\n                    loader: 'babel-loader',\\n                    options: {\\n                        presets: [ '@babel/env' ],\\n                        plugins: [ '@babel/plugin-proposal-class-properties' ]\\n                    }\\n                }\\n            }\\n        ]\\n    }\\n}\\n</code></pre>\\n<pre><code class=\\\"language-html\\\">&#x3C;!DOCTYPE html>\\n&#x3C;html lang=\\\"en\\\">\\n&#x3C;head>\\n    &#x3C;meta charset=\\\"UTF-8\\\">\\n    &#x3C;meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">\\n    &#x3C;meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    &#x3C;title>Document&#x3C;/title>\\n&#x3C;/head>\\n&#x3C;body>\\n    &#x3C;script src=\\\"./dist/bundle.js\\\">&#x3C;/script>\\n&#x3C;/body>\\n&#x3C;/html>\\n</code></pre>\",\"id\":\"/home/nicolas/Documents/workshop/src/pages/2021-05-24-webpack/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2021-05-24T12:25:13.523Z\",\"path\":\"/webpack\",\"title\":\"Webpack 5\",\"excerpt\":\"\",\"tags\":[\"Webpack\",\"javascript\"]}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docker-recipes-b9c168ca6a320e8e5f8f.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h3>Create a container with a mongo database and connect to it</h3>\\n<p>Start with displaying all currently running containers:</p>\\n<pre><code class=\\\"language-bash\\\">docker ps\\n</code></pre>\\n<p>Then create locally the container associated with the mongo docker image:</p>\\n<pre><code class=\\\"language-bash\\\">docker run -p 27017:27017 -d mongo\\n</code></pre>\\n<p>Executing another time <code>docker ps</code> results in information on the created container like the following being displayed:</p>\\n<pre><code>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                      NAMES\\n2c6a61aba41b        mongo               \\\"docker-entrypoint.sâ€¦\\\"   3 minutes ago       Up 3 minutes        0.0.0.0:27017->27017/tcp   clever_dubinsky\\n</code></pre>\\n<p>Connection to the database at url localhost:27017 can be opened using for instance the robo-3t nosql database editor.\\nFinally, the container when not needed anymore can be stopped with:</p>\\n<pre><code>docker stop 2c6a61aba41b\\n</code></pre>\\n<h3>Create a container with a PostgreSQL database given the database name and the user credentials</h3>\\n<p>Let us assume we need to connect to a database called course_data in a PostgreSQL SGBD with the following credentials: the user is postgres and the password is password. The command line to launch a docker container with such a database is:</p>\\n<pre><code class=\\\"language-bash\\\">docker run --name postgresdb -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password -e POSTGRES_DB=course_data -d -p 5432:5432 postgres\\n</code></pre>\\n<p>Terminal access to the database prompt is obtained by first accessing the container shell:</p>\\n<pre><code class=\\\"language-bash\\\">docker container exec -it postgresdb bash\\n</code></pre>\\n<p>The postgre prompt of user 'postgres' may then be accessed with:</p>\\n<pre><code class=\\\"language-bash\\\">psql course_data postgres\\n</code></pre>\",\"frontmatter\":{\"title\":\"Docker Recipes\",\"date\":\"March 31, 2020\",\"path\":\"/docker-recipes\",\"tags\":[\"docker\",\"container\",\"devops\"],\"excerpt\":\"Some Docker Recipes\"}}},\"pathContext\":{\"prev\":{\"html\":\"<h3>System parameters</h3>\\n<p>Elasticsearch version and more basic parameters:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200 -u admin:admin --insecure\\n</code></pre>\\n<p>Information on nodes:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/nodes?v -u admin:admin --insecure\\n</code></pre>\\n<p>Integrated plugins:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/plugins?v -u admin:admin --insecure\\n</code></pre>\\n<p>Information on authentication:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_opendistro/_security/authinfo -u admin:admin --insecure\\n</code></pre>\\n<p>Information on cluster:</p>\\n<pre><code class=\\\"language-http\\\">http://localhost:9200/_cluster/settings?include_defaults=true\\n</code></pre>\\n<p>Indices:</p>\\n<pre><code class=\\\"language-bash\\\">curl -XGET https://localhost:9200/_cat/indices -u admin:admin --insecure\\n</code></pre>\\n<h3>Cloning an index from dev tools console:</h3>\\n<pre><code>POST _reindex\\n{\\n  \\\"source\\\": {\\n    \\\"index\\\": \\\"portefeuille\\\"\\n  },\\n  \\\"dest\\\": {\\n    \\\"index\\\": \\\"portefeuille_test_1\\\"\\n  }\\n}\\n</code></pre>\\n<h3>Creating a sample index from dev tools console:</h3>\\n<pre><code>DELETE /bankdata\\n</code></pre>\\n<pre><code>PUT /bankdata\\nPOST /bankdata/1\\n{ \\\"age\\\": 42, \\\"balance\\\": 12000 }\\nPOST /bankdata/2\\n{ \\\"age\\\": 28, \\\"balance\\\": 7000 }\\nPOST /bankdata/3\\n{ \\\"age\\\": 51, \\\"balance\\\": 2300 }\\nPOST /bankdata/4\\n{ \\\"age\\\": 15, \\\"balance\\\": 450 }\\nPOST /bankdata/5\\n{ \\\"age\\\": 33 }\\nPOST /bankdata/6\\n{ \\\"age\\\": 32 }\\nPOST /bankdata/7\\n{ \\\"age\\\": 27 }\\nPOST /bankdata/8\\n{ \\\"age\\\": 79 }\\nPOST /bankdata/9\\n{ \\\"age\\\": 43, balance: null }\\n</code></pre>\\n<pre><code>GET /bankdata\\n</code></pre>\\n<pre><code>GET /bankdata/_search\\n{\\n    \\\"query\\\": {\\n        \\\"match_all\\\": {}\\n    }\\n}\\n</code></pre>\\n<h3>Updating a given field in an index</h3>\\n<pre><code>POST agrial_portefeuille/_update_by_query\\n{\\n  \\\"script\\\": {\\n    \\\"lang\\\": \\\"painless\\\",\\n    \\\"source\\\": \\\"\\\"\\\"\\n   try {\\n        String fieldName = 'nom_conseille_pv';\\n        String value = ctx._source[fieldName];\\n        ctx._source[fieldName] = value.replace(\\\" \\\",\\\"_\\\");\\n      }\\n      catch(Exception e) {\\n      }\\n    \\\"\\\"\\\"\\n  }\\n}\\n</code></pre>\\n<h3>Template for indexing a field as a geo_shape</h3>\\n<pre><code>PUT _template/geotemplate_geoshape_dpt\\n{ \\\"index_patterns\\\": [\\n  \\\"index_pattern_title\\\"\\n  ],\\n  \\\"settings\\\": {},\\n    \\\"mappings\\\": {\\n      \\\"properties\\\": {\\n        \\\"wkt\\\" :{\\n          \\\"type\\\": \\\"geo_shape\\\"\\n        }\\n      }\\n    },\\n    \\\"aliases\\\": {}\\n}\\n</code></pre>\\n<h3>Painless language scripts</h3>\\n<pre><code>(((ctx?._source[\\\"SURF_PARC\\\"]?:0)?:0)/((ctx?._source[\\\"Bovin\\\"]?:1)?:1)?:1)\\n</code></pre>\",\"id\":\"/home/nicolas/Documents/workshop/src/pages/2020-12-03-ELK-4/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2020-12-03T22:01:12.451Z\",\"path\":\"/elk-useful-queries\",\"title\":\"Useful Queries\",\"excerpt\":\"\",\"tags\":[\"Elastic Search\",\"queries\",\"environment variables\",\"system\"]}},\"next\":{\"html\":\"<h2>Udemy course repository</h2>\\n<pre><code class=\\\"language-bash\\\">git clone git@github.com:vp-online-courses/webpack-tutorial.git\\ncd webpack-tutorial\\n</code></pre>\\n<h2>Starting a webpack project</h2>\\n<pre><code class=\\\"language-bash\\\">npm install webpack webpack-cli --save-dev\\nnpx webpack\\nnpx webpack --stats detailed\\ntouch webpack.config.js\\nnpm run build\\n</code></pre>\\n<h2>Types of asset modules</h2>\\n<ul>\\n<li>asset/resource: emits the file into the output folder and exports the url to that file. Use examples: large images or large font files.</li>\\n<li>asset/inline: inlines the file in the bundle as a data uri without adding a new file in the output folder. Use examples: small pieces of data like svg.</li>\\n<li>asset: a combination of asset/resource and asset/inline (8 kB is the default size limit)</li>\\n<li>asset/source: plain text data. Inject the text as it is in the file into the javascript bundle as a string of text.</li>\\n</ul>\\n<h2>Loaders</h2>\\n<pre><code class=\\\"language-bash\\\">npm install css-loader style-loader --save-dev\\nnpm install sass-loader node-sass --save-dev\\nnpm install @babel/core babel-loader @babel/preset-env @babel/plugin-proposal-class-properties --save-dev\\n</code></pre>\\n<h2>A config file example</h2>\\n<p>The following is an example of a webpack.config.js content followed with\\nthe corresponding index.html file. Additionaly, a file named <code>./src/index.js</code> is\\nexpected as the entry point of the app.</p>\\n<pre><code class=\\\"language-js\\\">const path = require('path');\\n\\nmodule.exports = {\\n    entry: './src/index.js',\\n    output: {\\n        filename: 'bundle.js',\\n        path: path.resolve(__dirname, './dist'),\\n        publicPath: 'dist/'\\n    },\\n    mode: 'none',\\n    module: {\\n        rules: [\\n            {\\n                test: /\\\\.(png|jpg)$/,\\n                type: 'asset',\\n                parser: {\\n                    dataUrlCondition: {\\n                        maxSize: 3 * 1024 // 3 kilobytes\\n                    }\\n                }\\n            },\\n            {\\n                test: /\\\\.txt/,\\n                type: 'asset/source'\\n            },\\n            {\\n                test: /\\\\.css$/,\\n                use: [\\n                    'style-loader', 'css-loader'\\n                ]\\n            },\\n            {\\n                test: /\\\\.scss$/,\\n                use: [\\n                    'style-loader', 'css-loader', 'sass-loader'\\n                ]\\n            },\\n            {\\n                test: /\\\\.js$/,\\n                exclude: /node_modules/,\\n                use: {\\n                    loader: 'babel-loader',\\n                    options: {\\n                        presets: [ '@babel/env' ],\\n                        plugins: [ '@babel/plugin-proposal-class-properties' ]\\n                    }\\n                }\\n            }\\n        ]\\n    }\\n}\\n</code></pre>\\n<pre><code class=\\\"language-html\\\">&#x3C;!DOCTYPE html>\\n&#x3C;html lang=\\\"en\\\">\\n&#x3C;head>\\n    &#x3C;meta charset=\\\"UTF-8\\\">\\n    &#x3C;meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">\\n    &#x3C;meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    &#x3C;title>Document&#x3C;/title>\\n&#x3C;/head>\\n&#x3C;body>\\n    &#x3C;script src=\\\"./dist/bundle.js\\\">&#x3C;/script>\\n&#x3C;/body>\\n&#x3C;/html>\\n</code></pre>\",\"id\":\"/home/nicolas/Documents/workshop/src/pages/2021-05-24-webpack/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2021-05-24T12:25:13.523Z\",\"path\":\"/webpack\",\"title\":\"Webpack 5\",\"excerpt\":\"\",\"tags\":[\"Webpack\",\"javascript\"]}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docker-recipes.json\n// module id = 414\n// module chunks = 136351407110125"],"sourceRoot":""}