{"version":3,"sources":["webpack:///path---linux-utils-5bc77eafd0bc99065b1c.js","webpack:///./.cache/json/linux-utils.json"],"names":["webpackJsonp","426","module","exports","data","markdownRemark","html","frontmatter","title","date","path","tags","excerpt","pathContext","prev","id","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,isIAA43DC,aAAu4EC,MAAA,cAAAC,KAAA,mBAAAC,KAAA,eAAAC,MAAA,oDAAAC,QAAA,MAAiJC,aAAgBC,MAAQR,KAAA,i7mBAAgmqBS,GAAA,yGAAAR,aAA4JE,KAAA,2BAAAC,KAAA,SAAAF,MAAA,QAAAI,QAAA,GAAAD,MAAA,mBAAyGK,MAASV,KAAA,8+KAA4iLS,GAAA,wGAAAR,aAA6IE,KAAA,2BAAAC,KAAA,QAAAF,MAAA,OAAAI,QAAA,GAAAD,MAAA","file":"path---linux-utils-5bc77eafd0bc99065b1c.js","sourcesContent":["webpackJsonp([276602839367171],{\n\n/***/ 426:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h3>Miscelaneous bash tips</h3>\\n<p>The following command displays the status code from the last command:</p>\\n<pre><code class=\\\"language-bash\\\">echo $?\\n</code></pre>\\n<p>In the following command, output of a echo command is directed to\\nstandard input so that a second command viz more manages it like a file:</p>\\n<pre><code class=\\\"language-bash\\\">echo 'toto' | more -\\n</code></pre>\\n<h3>tree</h3>\\n<pre><code class=\\\"language-bash\\\">tree --noreport .\\n</code></pre>\\n<h3>vi</h3>\\n<p>Vi command for eliminating all occurences of colon \\\":\\\" is the following:</p>\\n<pre><code>:1,$s/://g\\n</code></pre>\\n<p>Here is the vi command for replacing all occurences of \\\"old\\\" with \\\"new\\\":</p>\\n<pre><code>:1,$s/old/new/g\\n</code></pre>\\n<p>Vi command for searching string \\\"xyz\\\":</p>\\n<pre><code>/xyz\\n</code></pre>\\n<h3>find</h3>\\n<p>File search:</p>\\n<pre><code class=\\\"language-bash\\\">find ./fvsa/ -name \\\"pvsve*\\\"\\n</code></pre>\\n<h3>grep</h3>\\n<p>Search string 'yourDir' in dir yourdir:</p>\\n<pre><code class=\\\"language-bash\\\">grep -nr 'yourString*' yourdir\\n</code></pre>\\n<h3>sed</h3>\\n<p>Sed is a stream editor for filtering and transforming text.</p>\\n<pre><code class=\\\"language-bash\\\">sed -i 's/word1/word2/g' inputfile\\n</code></pre>\\n<p>The <code>-i</code> option requests editing in place.\\n<code>s</code> stands for substitute. <code>g</code> stands for global replacement.</p>\\n<h3>A few tips with watch:</h3>\\n<p>Memory usage:</p>\\n<pre><code class=\\\"language-bash\\\">watch -n 5 free -m\\n</code></pre>\\n<p>Realtime clock in a term:</p>\\n<pre><code class=\\\"language-bash\\\">watch -n 1 date\\n</code></pre>\\n<h3>Modify filenames with rename</h3>\\n<p>Delete 4 first characters in all file names in dir:</p>\\n<pre><code class=\\\"language-bash\\\">rename 's/.{4}(.*)/$1/' *\\n</code></pre>\\n<p>Delete 5 last characters in all file names in dir:</p>\\n<pre><code class=\\\"language-bash\\\">rename 's/(.*).{5}/$1/' *\\n</code></pre>\\n<h3>wc</h3>\\n<p>Display total number of files in 'folder':</p>\\n<pre><code class=\\\"language-bash\\\">ls folder | wc -l\\n</code></pre>\\n<h3>Disk usage</h3>\\n<pre><code class=\\\"language-bash\\\">sudo ncdu -rx /\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">sudo du -shc /*\\n</code></pre>\\n<p>Displaying size occupied by Documents directory:</p>\\n<pre><code class=\\\"language-bash\\\">cd ~\\nsudo du -sh Documents\\n</code></pre>\\n<h3>Managing JDKs on Debian</h3>\\n<pre><code class=\\\"language-bash\\\">update-java-alternatives -l\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">sudo update-java-alternatives -s java-1.8.0-openjdk-amd64\\n</code></pre>\\n<p>Or in a more interactive way:</p>\\n<pre><code class=\\\"language-bash\\\">update-alternatives --config java\\n</code></pre>\\n<h3>Managing screens</h3>\\n<pre><code class=\\\"language-bash\\\">xrandr\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">xrandr --addmode HDMI-1 2560x1080\\n</code></pre>\\n<h3>Serving static content using http-server</h3>\\n<p>The following command starts http-server and serves all of the static\\ncontent (e.g. geojson files) available in the current directory:</p>\\n<pre><code class=\\\"language-bash\\\">http-server --cors='*' -p 5252\\n</code></pre>\\n<h3>Generating random passwords</h3>\\n<p>Install pwgen package and run the following command to\\nget a randow password with 12 characters including one special\\ncharacter at least:</p>\\n<pre><code class=\\\"language-bash\\\">pwgen 12 1 -y\\n</code></pre>\\n<h3>Managing permissions</h3>\\n<p>Command to state that owner and group of directory mydir have full permission\\nto access the directory and its content such as read, write and execute whereas\\nothers will have read and execute permission:</p>\\n<pre><code class=\\\"language-bash\\\">chmod -R 775 mydir\\n</code></pre>\\n<h3>Probing system on service management tool</h3>\\n<p>The following command can be use to check whether the service\\nmanagement tool is <code>service</code> or <code>systemctl</code>:</p>\\n<pre><code class=\\\"language-bash\\\">ps --no-headers -o comm 1\\n</code></pre>\\n<p>A <code>systemd</code> result indicates that systemd (systemctl) is the service management tool, while\\n<code>init</code> indicates that it is System V Init (service).</p>\\n<h3>Managing DNS</h3>\\n<pre><code class=\\\"language-bash\\\">sudo apt install bind9-host\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">host -t NS google.com\\n</code></pre>\",\"frontmatter\":{\"title\":\"Linux Utils\",\"date\":\"October 11, 2020\",\"path\":\"/linux-utils\",\"tags\":[\"Linux\",\"utils\",\"bash\",\"vi\",\"find\",\"grep\",\"rename\"],\"excerpt\":\"\"}}},\"pathContext\":{\"prev\":{\"html\":\"<h2>Links</h2>\\n<ul>\\n<li><a href=\\\"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/\\\">installing and starting mongodb locally</a></li>\\n<li><a href=\\\"https://linuxize.com/post/how-to-install-mongodb-on-ubuntu-18-04/\\\">some tips on configuration</a></li>\\n</ul>\\n<h2>Starting server and shell</h2>\\n<p>Start mongodb server with:</p>\\n<pre><code class=\\\"language-bash\\\">sudo service mongod start\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">sudo service mongod status\\n</code></pre>\\n<p>To verify whether the installation has completed successfully, connect to the MongoDB database server using the mongo tool and print the connection status with:</p>\\n<pre><code class=\\\"language-bash\\\">mongo --eval 'db.runCommand({ connectionStatus: 1 })'\\n</code></pre>\\n<p>Shell can now be started with:</p>\\n<pre><code class=\\\"language-bash\\\">mongo\\n</code></pre>\\n<h2>Example</h2>\\n<pre><code class=\\\"language-node\\\">db.createCollection('employes');\\n</code></pre>\\n<ul>\\n<li>display all of the collections in the database:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">show collections;\\n</code></pre>\\n<ul>\\n<li>insert data:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7d9\\\"), \\\"nom\\\" : \\\"King\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 27, \\\"adresse\\\" : { \\\"numero\\\" : 78, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7da\\\"), \\\"nom\\\" : \\\"Ossola\\\", \\\"prenom\\\" : \\\"Christophe\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 75, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7db\\\"), \\\"nom\\\" : \\\"Monnin\\\", \\\"prenom\\\" : \\\"Gilles\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 80, \\\"rue\\\" : \\\"General Leclerc\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7dc\\\"), \\\"nom\\\" : \\\"Priou\\\", \\\"prenom\\\" : \\\"Franck\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 79, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 547608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7dd\\\"), \\\"nom\\\" : \\\"Leberre\\\", \\\"prenom\\\" : \\\"Stephanie\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 79, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 559608352, \\\"prime\\\" : 1500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7de\\\"), \\\"nom\\\" : \\\"Rupont\\\", \\\"prenom\\\" : \\\"Jean\\\", \\\"anciennete\\\" : 11, \\\"adresse\\\" : { \\\"numero\\\" : 15, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7df\\\"), \\\"nom\\\" : \\\"Ving\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 17, \\\"adresse\\\" : { \\\"numero\\\" : 28, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7e0\\\"), \\\"nom\\\" : \\\"Bass\\\", \\\"prenom\\\" : \\\"Vincent\\\", \\\"anciennete\\\" : 12, \\\"adresse\\\" : { \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e1\\\"), \\\"nom\\\" : \\\"Motin\\\", \\\"prenom\\\" : \\\"Roger\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 67, \\\"rue\\\" : \\\"Jean Moulin\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e2\\\"), \\\"nom\\\" : \\\"Prito\\\", \\\"prenom\\\" : \\\"Arnaud\\\", \\\"anciennete\\\" : 6, \\\"adresse\\\" : { \\\"numero\\\" : 62, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 565608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e3\\\"), \\\"nom\\\" : \\\"Fererre\\\", \\\"prenom\\\" : \\\"Julien\\\", \\\"anciennete\\\" : 8, \\\"adresse\\\" : { \\\"numero\\\" : 24, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 577608352, \\\"prime\\\" : 4500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e4\\\"), \\\"nom\\\" : \\\"Cuponi\\\", \\\"prenom\\\" : \\\"Eric\\\", \\\"anciennete\\\" : 10, \\\"adresse\\\" : { \\\"numero\\\" : 28, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e5\\\"), \\\"nom\\\" : \\\"Kingaba\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 23, \\\"adresse\\\" : { \\\"numero\\\" : 38, \\\"codepostal\\\" : 33000, \\\"ville\\\"); db.employes.save(: \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e6\\\"), \\\"nom\\\" : \\\"Sola\\\", \\\"prenom\\\" : \\\"Nicolas\\\", \\\"anciennete\\\" : 3, \\\"adresse\\\" : { \\\"numero\\\" : 45, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e7\\\"), \\\"nom\\\" : \\\"Mani\\\", \\\"prenom\\\" : \\\"Dominique\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 47, \\\"rue\\\" : \\\"Lavoisier\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e8\\\"), \\\"nom\\\" : \\\"Briu\\\", \\\"prenom\\\" : \\\"Rene\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 107, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 575608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e9\\\"), \\\"nom\\\" : \\\"Leterre\\\", \\\"prenom\\\" : \\\"Stephane\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 9, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 528608352, \\\"prime\\\" : 3500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ec\\\"), \\\"nom\\\" : \\\"Laouani\\\", \\\"prenom\\\" : \\\"Bassil\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 38, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ed\\\"), \\\"nom\\\" : \\\"Autran\\\", \\\"prenom\\\" : \\\"Vincent\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 41, \\\"rue\\\" : \\\"General DeBase\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ee\\\"), \\\"nom\\\" : \\\"Menard\\\", \\\"prenom\\\" : \\\"Eric\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 42, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 561908352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7d9\\\"), \\\"nom\\\" : \\\"King\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 27, \\\"adresse\\\" : { \\\"numero\\\" : 78, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7da\\\"), \\\"nom\\\" : \\\"Ossola\\\", \\\"prenom\\\" : \\\"Christophe\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 75, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7db\\\"), \\\"nom\\\" : \\\"Monnin\\\", \\\"prenom\\\" : \\\"Gilles\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 80, \\\"rue\\\" : \\\"General Leclerc\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7dc\\\"), \\\"nom\\\" : \\\"Priou\\\", \\\"prenom\\\" : \\\"Franck\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 79, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 547608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7dd\\\"), \\\"nom\\\" : \\\"Leberre\\\", \\\"prenom\\\" : \\\"Stephanie\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 79, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 559608352, \\\"prime\\\" : 1500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7de\\\"), \\\"nom\\\" : \\\"Rupont\\\", \\\"prenom\\\" : \\\"Jean\\\", \\\"anciennete\\\" : 11, \\\"adresse\\\" : { \\\"numero\\\" : 15, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7df\\\"), \\\"nom\\\" : \\\"Ving\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 17, \\\"adresse\\\" : { \\\"numero\\\" : 28, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7e0\\\"), \\\"nom\\\" : \\\"Bass\\\", \\\"prenom\\\" : \\\"Vincent\\\", \\\"anciennete\\\" : 12, \\\"adresse\\\" : { \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e1\\\"), \\\"nom\\\" : \\\"Motin\\\", \\\"prenom\\\" : \\\"Roger\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 67, \\\"rue\\\" : \\\"Jean Moulin\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e2\\\"), \\\"nom\\\" : \\\"Prito\\\", \\\"prenom\\\" : \\\"Arnaud\\\", \\\"anciennete\\\" : 6, \\\"adresse\\\" : { \\\"numero\\\" : 62, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 565608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e3\\\"), \\\"nom\\\" : \\\"Fererre\\\", \\\"prenom\\\" : \\\"Julien\\\", \\\"anciennete\\\" : 8, \\\"adresse\\\" : { \\\"numero\\\" : 24, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 577608352, \\\"prime\\\" : 4500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e4\\\"), \\\"nom\\\" : \\\"Cuponi\\\", \\\"prenom\\\" : \\\"Eric\\\", \\\"anciennete\\\" : 10, \\\"adresse\\\" : { \\\"numero\\\" : 28, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e5\\\"), \\\"nom\\\" : \\\"Kingaba\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 23, \\\"adresse\\\" : { \\\"numero\\\" : 38, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e6\\\"), \\\"nom\\\" : \\\"Sola\\\", \\\"prenom\\\" : \\\"Nicolas\\\", \\\"anciennete\\\" : 3, \\\"adresse\\\" : { \\\"numero\\\" : 45, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e7\\\"), \\\"nom\\\" : \\\"Mani\\\", \\\"prenom\\\" : \\\"Dominique\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 47, \\\"rue\\\" : \\\"Lavoisier\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e8\\\"), \\\"nom\\\" : \\\"Briu\\\", \\\"prenom\\\" : \\\"Rene\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 107, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 575608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e9\\\"), \\\"nom\\\" : \\\"Leterre\\\", \\\"prenom\\\" : \\\"Stephane\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 9, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 528608352, \\\"prime\\\" : 3500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ec\\\"), \\\"nom\\\" : \\\"Laouani\\\", \\\"prenom\\\" : \\\"Bassil\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 38, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ed\\\"), \\\"nom\\\" : \\\"Autran\\\", \\\"prenom\\\" : \\\"Vincent\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 41, \\\"rue\\\" : \\\"General DeBase\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ee\\\"), \\\"nom\\\" : \\\"Menard\\\", \\\"prenom\\\" : \\\"Eric\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 42, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 561908352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ef\\\"), \\\"nom\\\" : \\\"Landry\\\", \\\"prenom\\\" : \\\"Brunel\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 79, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 561008352, \\\"prime\\\" : 7500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f0\\\"), \\\"nom\\\" : \\\"Rigal\\\", \\\"prenom\\\" : \\\"Cyril\\\", \\\"anciennete\\\" : 14, \\\"adresse\\\" : { \\\"numero\\\" : 108, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f1\\\"), \\\"nom\\\" : \\\"Dupre\\\", \\\"prenom\\\" : \\\"Bertrand\\\", \\\"anciennete\\\" : 4, \\\"adresse\\\" : { \\\"numero\\\" : 92, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f2\\\"), \\\"nom\\\" : \\\"Roy\\\", \\\"prenom\\\" : \\\"Christophe\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 5, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f3\\\"), \\\"nom\\\" : \\\"Potin\\\", \\\"prenom\\\" : \\\"Stephanie\\\", \\\"anciennete\\\" : 3, \\\"adresse\\\" : { \\\"numero\\\" : 15, \\\"rue\\\" : \\\"Jean Sens\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f4\\\"), \\\"nom\\\" : \\\"Hollande\\\", \\\"prenom\\\" : \\\"Sylvie\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 16, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 96930282 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f5\\\"), \\\"nom\\\" : \\\"Chirac\\\", \\\"prenom\\\" : \\\"Melanie\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 17, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 561607852, \\\"prime\\\" : 1500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f6\\\"), \\\"nom\\\" : \\\"Aumont\\\", \\\"prenom\\\" : \\\"Audrey\\\", \\\"anciennete\\\" : 10, \\\"adresse\\\" : { \\\"numero\\\" : 18, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f7\\\"), \\\"nom\\\" : \\\"Julien\\\", \\\"prenom\\\" : \\\"Marie\\\", \\\"anciennete\\\" : 11, \\\"adresse\\\" : { \\\"numero\\\" : 19, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f8\\\"), \\\"nom\\\" : \\\"Guttierrez\\\", \\\"prenom\\\" : \\\"Garard\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 75, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f9\\\"), \\\"nom\\\" : \\\"David\\\", \\\"prenom\\\" : \\\"Christophe\\\", \\\"anciennete\\\" : 12, \\\"adresse\\\" : { \\\"numero\\\" : 80, \\\"rue\\\" : \\\"Les tuiles\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7fa\\\"), \\\"nom\\\" : \\\"Allemand\\\", \\\"prenom\\\" : \\\"Edouard\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 17, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 561608552 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7fb\\\"), \\\"nom\\\" : \\\"Has\\\", \\\"prenom\\\" : \\\"Stephen\\\", \\\"anciennete\\\" : 13, \\\"adresse\\\" : { \\\"numero\\\" : 7, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 96930154, \\\"prime\\\" : 5000 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7fc\\\"), \\\"nom\\\" : \\\"Voneschen\\\", \\\"prenom\\\" : \\\"Henri\\\", \\\"anciennete\\\" : 10, \\\"adresse\\\" : { \\\"numero\\\" : 25, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7fd\\\"), \\\"nom\\\" : \\\"Buyot\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 14, \\\"adresse\\\" : { \\\"numero\\\" : 8, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7fe\\\"), \\\"nom\\\" : \\\"Manola\\\", \\\"prenom\\\" : \\\"Christophe\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 7, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ff\\\"), \\\"nom\\\" : \\\"Perrez\\\", \\\"prenom\\\" : \\\"Gilles\\\", \\\"anciennete\\\" : 15, \\\"adresse\\\" : { \\\"numero\\\" : 2, \\\"rue\\\" : \\\"Les sabliers\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f800\\\"), \\\"nom\\\" : \\\"Pinto\\\", \\\"prenom\\\" : \\\"Franck\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 11, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 96928426 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f801\\\"), \\\"nom\\\" : \\\"Baron\\\", \\\"prenom\\\" : \\\"Elodie\\\", \\\"anciennete\\\" : 16, \\\"adresse\\\" : { \\\"numero\\\" : 9, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 96934634, \\\"prime\\\" : 1500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f802\\\"), \\\"nom\\\" : \\\"Pasqua\\\", \\\"prenom\\\" : \\\"Jean\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 32, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f803\\\"), \\\"nom\\\" : \\\"Moore\\\", \\\"prenom\\\" : \\\"Roland\\\", \\\"anciennete\\\" : 17, \\\"adresse\\\" : { \\\"numero\\\" : 37, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f804\\\"), \\\"nom\\\" : \\\"Copola\\\", \\\"prenom\\\" : \\\"Marc\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 47, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f805\\\"), \\\"nom\\\" : \\\"Batin\\\", \\\"prenom\\\" : \\\"Orlando\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 27, \\\"rue\\\" : \\\"Les huissiers\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f806\\\"), \\\"nom\\\" : \\\"Buis\\\", \\\"prenom\\\" : \\\"James\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 10, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 96935146 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa2181b16509ae5f807\\\"), \\\"nom\\\" : \\\"Balen\\\", \\\"prenom\\\" : \\\"Ortens\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 11, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 567708352, \\\"prime\\\" : 200 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7d8\\\"), \\\"nom\\\" : \\\"Dupond\\\", \\\"prenom\\\" : \\\"Jean\\\", \\\"anciennete\\\" : 10, \\\"adresse\\\" : { \\\"numero\\\" : 77, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ea\\\"), \\\"nom\\\" : \\\"Caponi\\\", \\\"prenom\\\" : \\\"Jean\\\", \\\"anciennete\\\" : 12, \\\"adresse\\\" : { \\\"numero\\\" : 77, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7eb\\\"), \\\"nom\\\" : \\\"Bouras\\\", \\\"prenom\\\" : \\\"Gerardo\\\", \\\"anciennete\\\" : 27, \\\"adresse\\\" : { \\\"numero\\\" : 34, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\n</code></pre>\\n<ul>\\n<li>display all documents in the collection and their number:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.find();\\n</code></pre>\\n<pre><code class=\\\"language-node\\\">db.employes.find().count();\\n</code></pre>\\n<ul>\\n<li>insert data in two different ways:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.insert({nom:'Alan',prenom:'Joe',anciennete:10});\\ndb.employes.save({nom:'Wick',prenom:'John',prime:150});\\n</code></pre>\\n<ul>\\n<li>display employees whose firstnames are David:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.find({prenom:'David'});\\n</code></pre>\\n<ul>\\n<li>display employees whose firstnames either start with a D or end with a d:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.find({prenom:/D.*|.*d$/});\\n</code></pre>\\n<ul>\\n<li>employees whose firstnames both start and end with a vowel:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.find({prenom:/^[AEIOUY].*[aeiouy]$/});\\n</code></pre>\\n<ul>\\n<li>employees with firstnames starting and ending with the same letter:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.find().forEach(function(p){let pre = p.prenom.toLowerCase();if(pre.substr(0,1)==pre.substr(pre.length-1,1)){print(pre);}});\\n</code></pre>\\n<ul>\\n<li>\\n<p>display employees whose anciennete is larger than 10 years:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({anciennete:{$gt:10}},{_id:0,nom:1,prenom:1});\\n</code></pre>\\n</li>\\n<li>\\n<p>display name and address of employees whose street is known:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({'adresse.rue':{$exists:true}},{nom:1,adresse:1});\\ndb.employes.find({'adresse.rue':{$exists:true}},{nom:1,adresse:1}).limit(2).pretty();\\ndb.employes.find({'adresse.rue':{$exists:true}},{nom:1,adresse:1,_id:0}).limit(2).pretty();\\n</code></pre>\\n</li>\\n<li>\\n<p>increase of 200 the prime of employees already having a prime</p>\\n<pre><code class=\\\"language-node\\\">db.employes.updateMany({prime:{$exists:true}},{$inc:{prime:200}});\\n</code></pre>\\n</li>\\n<li>\\n<p>list the first three among employees sorted in a decreasing way by seniority:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({anciennete:{$exists:true}},{_id:0}).sort({anciennete:-1}).limit(3).pretty();\\n</code></pre>\\n</li>\\n<li>\\n<p>display empoyees from Toulouse with their seniority:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({'adresse.ville':'Toulouse'},{nom:1,prenom:1,anciennete:1,_id:0}).pretty();\\n</code></pre>\\n</li>\\n<li>\\n<p>More <code>find</code> queries:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({$and:[{prenom:/^M/},{$or:[{'adresse.ville':'Foix'},{'adresse.ville':'Bordeaux'}]}]});\\ndb.employes.find({$and:[{prenom:/^M/},{$or:[{'adresse.ville':'Foix'},{'adresse.ville':'Bordeaux'}]}]}).pretty();\\n</code></pre>\\n</li>\\n<li>\\n<p>Update operation on an employee's address:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.update({prenom: 'Dominique', nom:'Mani'},{$set:{'adresse.numero':20,'adresse.ville':'Marseille','adresse.codepostal':'13015'},$unset:{'adresse.rue':1}});\\n</code></pre>\\n</li>\\n<li>\\n<p>Add prime to employees from Toulouse and Bordeaux without primes:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.updateMany({$and:[{\\\"adresse.ville\\\":{$nin:[\\\"Paris\\\",\\\"Toulouse\\\",\\\"Bordeaux\\\"]}},{prime:{$exists:false}}]},{$set:{prime:1500}});\\n</code></pre>\\n</li>\\n<li>\\n<p>miscelaneous:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({tel:{$exists:true}},{}).forEach(function(t){db.employes.updateMany({_id:t._id},{$push:{telephone:t.tel},$unset:{tel:1}});});\\ndb.employes.find({prime:{$exists:0}}).count();\\ndb.employes.find({prime:{$exists:0}}).forEach(function(doc){var length = doc.adresse.ville.length; var newPrime = 100*length; db.employes.update({_id: doc._id},{$inc:{prime: newPrime}});});\\ndb.employes.find({prime:{$exists:0}}).count();\\ndb.employes.find().forEach(function(p){var email=p.nom+'.'+p.prenom+'@formation.fr';if(p.telephone){var email=p.prenom+'.'+p.nom+'@formation.fr';db.employes.updateMany({_id:p._id},{$set:{mail:email}})}});\\ndb.employes.aggregate({$group:{_id:'$prenom',ancienneteCum:{$sum:'$anciennete'}}},{$sort:{_id:1}});\\nObjectId(\\\"511d0aa0181b16509ae5f7f7\\\");\\n</code></pre>\\n</li>\\n</ul>\",\"id\":\"/home/nicolas/projects/workshop/src/pages/2021-10-20-mongo/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2021-10-20T10:14:00.823Z\",\"path\":\"/mongo\",\"title\":\"Mongo\",\"excerpt\":\"\",\"tags\":[\"NoSQL\",\"mongo\"]}},\"next\":{\"html\":\"<h2>Cargo commands</h2>\\n<p>Command to create a project:</p>\\n<pre><code class=\\\"language-bash\\\">cargo new hello\\n</code></pre>\\n<p>You can compile and run the project now with:</p>\\n<pre><code class=\\\"language-bash\\\">cargo run\\n</code></pre>\\n<p>This builds the project in a directory called <code>target/debug</code>.\\nTo build the project in the <code>target/release</code> directory intended for prod, just run:</p>\\n<pre><code class=\\\"language-bash\\\">cargo run --release\\n</code></pre>\\n<p>A good tip to improve the code with idiomatic rust coding hints/warnings is to run:</p>\\n<pre><code class=\\\"language-bash\\\">cargo clippy\\n</code></pre>\\n<h2>Strings</h2>\\n<p>String slices refered to as <code>str</code>\\nare almost always handled in the shape of borrowed string slices <code>&#x26;str</code>.\\nSee also the Rust documentation on <a href=\\\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\\\">references and borrowing</a>.</p>\\n<p>A string literal stated\\n<code>let msg = \\\"Hello 🌎\\\";</code>\\nis a borrowed string slice.</p>\\n<p>The other string type is String.\\nData in a borrowed string slice cannot be modified\\nwhile data in a String can be modified.</p>\\n<p>A String can be obtained by applying the to_string() method on a\\nborrowed string slice:</p>\\n<pre><code>let msg = \\\"ab🎉\\\".to_string();\\n</code></pre>\\n<p>or else by passing the borrowed string slice to String::from:</p>\\n<pre><code>let msg = String::from(\\\"ab🎉\\\");\\n</code></pre>\\n<p>Internally, a borrowed string slice is made up of a pointer to some byte and\\na length. The length is the number of unicode characters in the string.</p>\\n<p>Bytes can be extracted from a borrowed string slice with the bytes() method: <code>word.bytes();</code></p>\\n<p>An iterator on unicode scalars can be built with <code>word.chars();</code></p>\\n<p>Additionally, an iterator on graphemes can be retrieved using a package called unicode-segmentation with:</p>\\n<p><code>graphemes(my_string, true)</code></p>\\n<p>A given item in the graphemes can then be accessed with by appending a statement like<code>.nth(3)</code></p>\\n<p>All of the helper methods to manipulate String objects are documented\\n<a href=\\\"https://doc.rust-lang.org/std/string/struct.String.html#method.bytes\\\">here</a>.</p>\\n<h2>Structs and Traits</h2>\\n<pre><code class=\\\"language-rust\\\">#[derive(Debug)]\\nstruct RedFox {\\n    enemy: bool,\\n    life: u32,\\n}\\n\\ntrait Noisy {\\n    fn get_noise(&#x26;self) -> &#x26;str;\\n}\\n\\nimpl Noisy for RedFox {\\n    fn get_noise(&#x26;self) -> &#x26;str { \\\"Meow?\\\" }\\n}\\n\\nfn print_noise&#x3C;T: Noisy>(item: T) {\\n    println!(\\\"\\\", item.get_noise());\\n}\\n\\nimpl Noisy for u8 {\\n    fn get_noise(&#x26;self) -> &#x26;str { \\\"BYTE!\\\" }\\n}\\n\\nfn main() {\\n    print_noise(5_u8); // prints \\\"BYTE!\\\"\\n}\\n</code></pre>\\n<h2>Vectors</h2>\\n<pre><code class=\\\"language-rust\\\">let mut v: Vec&#x3C;i32> = Vec::new();\\nv.push(2);\\nv.push(4);\\nv.push(6);\\nlet x = v.pop();    // x is 6\\nprintln(\\\"{}\\\", v[1]);// prints \\\"4\\\"\\nlet mut u = vec![2, 4, 6];\\n</code></pre>\\n<h2>Hashmaps</h2>\\n<pre><code class=\\\"language-rust\\\">let mut h: HashMap&#x3C;u8, bool> = HashMap::new();\\nh.insert(5, true);\\nh.insert(6, false);\\nlet have_five = h.remove(&#x26;5).unwrap();\\n</code></pre>\\n<p>Other collections: VecDeque, LinkedList, HashSet, BinaryHeap, BTreeMap, BTreeSet</p>\\n<h2>Enums</h2>\\n<pre><code class=\\\"language-rust\\\">enum Color {\\n    Red,\\n    Green,\\n    Blue,\\n}\\nlet color = Color::Red;\\n</code></pre>\\n<pre><code class=\\\"language-rust\\\">enum DispenserItem {\\n    Empty,\\n    Ammo(u8),\\n    Things(String, i32),\\n    Place {x: i32, y: i32},\\n}\\n\\nuse DispenserItem::*;\\nlet item1 = Ammo(69);\\nlet item2 = Things(\\\"hat\\\".to_string(), 7);\\n</code></pre>\\n<h3>The rust predefined Option enum</h3>\\n<pre><code class=\\\"language-rust\\\">enum Option&#x3C;T> {\\n    Some(T),\\n    None,\\n}\\n\\nlet mut x: Option&#x3C;i32> =  None;\\nx = Some(5);\\nx.is_some(); // true\\nx.is_none(); false\\nfor i in x {\\n    println!(\\\"{}\\\", i); // prints 5\\n}\\n</code></pre>\\n<h3>The rust predefined Result enum</h3>\\n<pre><code class=\\\"language-rust\\\">enum Result&#x3C;T, E> {\\n    Ok(T),\\n    Err(E),\\n}\\n</code></pre>\\n<p>Example with Result:</p>\\n<pre><code class=\\\"language-rust\\\">use std::fs::File;\\n\\nfn main() {\\n    let res = File::open(\\\"foo\\\");\\n    let f = res.unwrap();\\n}\\n\\nfn main() {\\n    let res = File::open(\\\"foo\\\");\\n    let f = res.expect(\\\"error message\\\");\\n}\\n\\nfn main() {\\n    let res = File::open(\\\"foo\\\");\\n    let f = res.is_ok() {\\n        let f = res.unwrap();\\n    }\\n}\\n\\nfn main() {\\n    let res = File::open(\\\"foo\\\");\\n    match res {\\n        Ok(f) => { /* do stuff */ },\\n        Err(e) => { /* do stuff */ },\\n    }\\n}\\n</code></pre>\\n<h3>Ownership, references  &#x26; borrowing</h3>\\n<p>There are 3 rules to ownership:</p>\\n<ol>\\n<li>Each value has an owner</li>\\n<li>There is only one owner of a value</li>\\n<li>Value gets dropped if its owner goes out of scope</li>\\n</ol>\\n<pre><code class=\\\"language-rust\\\">x: &#x26;mut i32\\n*x // a mutable i32\\n</code></pre>\\n<pre><code class=\\\"language-rust\\\">x: &#x26;i32\\n*x: // an immutable i32\\n</code></pre>\\n<p>At any time, it is possible to have one mutable reference\\nor any number of immutable references to a given value.</p>\\n<p>A borrowed variable passed to a function can be dereferenced in two ways.\\nThe first way is automated deferencing:</p>\\n<pre><code class=\\\"language-rust\\\">fn do_stuff(s: &#x26;mut String) {\\n    s.insert_str(0, \\\"Hi, \\\");\\n}\\n</code></pre>\\n<p>And the second way is manual:</p>\\n<pre><code class=\\\"language-rust\\\">fn do_stuff(s: &#x26;mut String) {\\n    *s = String::from(\\\"Replacement\\\")\\n}\\n</code></pre>\",\"id\":\"/home/nicolas/projects/workshop/src/pages/2022-02-06-rust/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2022-02-06T10:17:00.823Z\",\"path\":\"/rust\",\"title\":\"Rust\",\"excerpt\":\"\",\"tags\":[\"rust\"]}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---linux-utils-5bc77eafd0bc99065b1c.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h3>Miscelaneous bash tips</h3>\\n<p>The following command displays the status code from the last command:</p>\\n<pre><code class=\\\"language-bash\\\">echo $?\\n</code></pre>\\n<p>In the following command, output of a echo command is directed to\\nstandard input so that a second command viz more manages it like a file:</p>\\n<pre><code class=\\\"language-bash\\\">echo 'toto' | more -\\n</code></pre>\\n<h3>tree</h3>\\n<pre><code class=\\\"language-bash\\\">tree --noreport .\\n</code></pre>\\n<h3>vi</h3>\\n<p>Vi command for eliminating all occurences of colon \\\":\\\" is the following:</p>\\n<pre><code>:1,$s/://g\\n</code></pre>\\n<p>Here is the vi command for replacing all occurences of \\\"old\\\" with \\\"new\\\":</p>\\n<pre><code>:1,$s/old/new/g\\n</code></pre>\\n<p>Vi command for searching string \\\"xyz\\\":</p>\\n<pre><code>/xyz\\n</code></pre>\\n<h3>find</h3>\\n<p>File search:</p>\\n<pre><code class=\\\"language-bash\\\">find ./fvsa/ -name \\\"pvsve*\\\"\\n</code></pre>\\n<h3>grep</h3>\\n<p>Search string 'yourDir' in dir yourdir:</p>\\n<pre><code class=\\\"language-bash\\\">grep -nr 'yourString*' yourdir\\n</code></pre>\\n<h3>sed</h3>\\n<p>Sed is a stream editor for filtering and transforming text.</p>\\n<pre><code class=\\\"language-bash\\\">sed -i 's/word1/word2/g' inputfile\\n</code></pre>\\n<p>The <code>-i</code> option requests editing in place.\\n<code>s</code> stands for substitute. <code>g</code> stands for global replacement.</p>\\n<h3>A few tips with watch:</h3>\\n<p>Memory usage:</p>\\n<pre><code class=\\\"language-bash\\\">watch -n 5 free -m\\n</code></pre>\\n<p>Realtime clock in a term:</p>\\n<pre><code class=\\\"language-bash\\\">watch -n 1 date\\n</code></pre>\\n<h3>Modify filenames with rename</h3>\\n<p>Delete 4 first characters in all file names in dir:</p>\\n<pre><code class=\\\"language-bash\\\">rename 's/.{4}(.*)/$1/' *\\n</code></pre>\\n<p>Delete 5 last characters in all file names in dir:</p>\\n<pre><code class=\\\"language-bash\\\">rename 's/(.*).{5}/$1/' *\\n</code></pre>\\n<h3>wc</h3>\\n<p>Display total number of files in 'folder':</p>\\n<pre><code class=\\\"language-bash\\\">ls folder | wc -l\\n</code></pre>\\n<h3>Disk usage</h3>\\n<pre><code class=\\\"language-bash\\\">sudo ncdu -rx /\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">sudo du -shc /*\\n</code></pre>\\n<p>Displaying size occupied by Documents directory:</p>\\n<pre><code class=\\\"language-bash\\\">cd ~\\nsudo du -sh Documents\\n</code></pre>\\n<h3>Managing JDKs on Debian</h3>\\n<pre><code class=\\\"language-bash\\\">update-java-alternatives -l\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">sudo update-java-alternatives -s java-1.8.0-openjdk-amd64\\n</code></pre>\\n<p>Or in a more interactive way:</p>\\n<pre><code class=\\\"language-bash\\\">update-alternatives --config java\\n</code></pre>\\n<h3>Managing screens</h3>\\n<pre><code class=\\\"language-bash\\\">xrandr\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">xrandr --addmode HDMI-1 2560x1080\\n</code></pre>\\n<h3>Serving static content using http-server</h3>\\n<p>The following command starts http-server and serves all of the static\\ncontent (e.g. geojson files) available in the current directory:</p>\\n<pre><code class=\\\"language-bash\\\">http-server --cors='*' -p 5252\\n</code></pre>\\n<h3>Generating random passwords</h3>\\n<p>Install pwgen package and run the following command to\\nget a randow password with 12 characters including one special\\ncharacter at least:</p>\\n<pre><code class=\\\"language-bash\\\">pwgen 12 1 -y\\n</code></pre>\\n<h3>Managing permissions</h3>\\n<p>Command to state that owner and group of directory mydir have full permission\\nto access the directory and its content such as read, write and execute whereas\\nothers will have read and execute permission:</p>\\n<pre><code class=\\\"language-bash\\\">chmod -R 775 mydir\\n</code></pre>\\n<h3>Probing system on service management tool</h3>\\n<p>The following command can be use to check whether the service\\nmanagement tool is <code>service</code> or <code>systemctl</code>:</p>\\n<pre><code class=\\\"language-bash\\\">ps --no-headers -o comm 1\\n</code></pre>\\n<p>A <code>systemd</code> result indicates that systemd (systemctl) is the service management tool, while\\n<code>init</code> indicates that it is System V Init (service).</p>\\n<h3>Managing DNS</h3>\\n<pre><code class=\\\"language-bash\\\">sudo apt install bind9-host\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">host -t NS google.com\\n</code></pre>\",\"frontmatter\":{\"title\":\"Linux Utils\",\"date\":\"October 11, 2020\",\"path\":\"/linux-utils\",\"tags\":[\"Linux\",\"utils\",\"bash\",\"vi\",\"find\",\"grep\",\"rename\"],\"excerpt\":\"\"}}},\"pathContext\":{\"prev\":{\"html\":\"<h2>Links</h2>\\n<ul>\\n<li><a href=\\\"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/\\\">installing and starting mongodb locally</a></li>\\n<li><a href=\\\"https://linuxize.com/post/how-to-install-mongodb-on-ubuntu-18-04/\\\">some tips on configuration</a></li>\\n</ul>\\n<h2>Starting server and shell</h2>\\n<p>Start mongodb server with:</p>\\n<pre><code class=\\\"language-bash\\\">sudo service mongod start\\n</code></pre>\\n<pre><code class=\\\"language-bash\\\">sudo service mongod status\\n</code></pre>\\n<p>To verify whether the installation has completed successfully, connect to the MongoDB database server using the mongo tool and print the connection status with:</p>\\n<pre><code class=\\\"language-bash\\\">mongo --eval 'db.runCommand({ connectionStatus: 1 })'\\n</code></pre>\\n<p>Shell can now be started with:</p>\\n<pre><code class=\\\"language-bash\\\">mongo\\n</code></pre>\\n<h2>Example</h2>\\n<pre><code class=\\\"language-node\\\">db.createCollection('employes');\\n</code></pre>\\n<ul>\\n<li>display all of the collections in the database:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">show collections;\\n</code></pre>\\n<ul>\\n<li>insert data:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7d9\\\"), \\\"nom\\\" : \\\"King\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 27, \\\"adresse\\\" : { \\\"numero\\\" : 78, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7da\\\"), \\\"nom\\\" : \\\"Ossola\\\", \\\"prenom\\\" : \\\"Christophe\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 75, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7db\\\"), \\\"nom\\\" : \\\"Monnin\\\", \\\"prenom\\\" : \\\"Gilles\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 80, \\\"rue\\\" : \\\"General Leclerc\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7dc\\\"), \\\"nom\\\" : \\\"Priou\\\", \\\"prenom\\\" : \\\"Franck\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 79, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 547608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7dd\\\"), \\\"nom\\\" : \\\"Leberre\\\", \\\"prenom\\\" : \\\"Stephanie\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 79, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 559608352, \\\"prime\\\" : 1500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7de\\\"), \\\"nom\\\" : \\\"Rupont\\\", \\\"prenom\\\" : \\\"Jean\\\", \\\"anciennete\\\" : 11, \\\"adresse\\\" : { \\\"numero\\\" : 15, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7df\\\"), \\\"nom\\\" : \\\"Ving\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 17, \\\"adresse\\\" : { \\\"numero\\\" : 28, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7e0\\\"), \\\"nom\\\" : \\\"Bass\\\", \\\"prenom\\\" : \\\"Vincent\\\", \\\"anciennete\\\" : 12, \\\"adresse\\\" : { \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e1\\\"), \\\"nom\\\" : \\\"Motin\\\", \\\"prenom\\\" : \\\"Roger\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 67, \\\"rue\\\" : \\\"Jean Moulin\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e2\\\"), \\\"nom\\\" : \\\"Prito\\\", \\\"prenom\\\" : \\\"Arnaud\\\", \\\"anciennete\\\" : 6, \\\"adresse\\\" : { \\\"numero\\\" : 62, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 565608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e3\\\"), \\\"nom\\\" : \\\"Fererre\\\", \\\"prenom\\\" : \\\"Julien\\\", \\\"anciennete\\\" : 8, \\\"adresse\\\" : { \\\"numero\\\" : 24, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 577608352, \\\"prime\\\" : 4500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e4\\\"), \\\"nom\\\" : \\\"Cuponi\\\", \\\"prenom\\\" : \\\"Eric\\\", \\\"anciennete\\\" : 10, \\\"adresse\\\" : { \\\"numero\\\" : 28, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e5\\\"), \\\"nom\\\" : \\\"Kingaba\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 23, \\\"adresse\\\" : { \\\"numero\\\" : 38, \\\"codepostal\\\" : 33000, \\\"ville\\\"); db.employes.save(: \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e6\\\"), \\\"nom\\\" : \\\"Sola\\\", \\\"prenom\\\" : \\\"Nicolas\\\", \\\"anciennete\\\" : 3, \\\"adresse\\\" : { \\\"numero\\\" : 45, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e7\\\"), \\\"nom\\\" : \\\"Mani\\\", \\\"prenom\\\" : \\\"Dominique\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 47, \\\"rue\\\" : \\\"Lavoisier\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e8\\\"), \\\"nom\\\" : \\\"Briu\\\", \\\"prenom\\\" : \\\"Rene\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 107, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 575608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e9\\\"), \\\"nom\\\" : \\\"Leterre\\\", \\\"prenom\\\" : \\\"Stephane\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 9, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 528608352, \\\"prime\\\" : 3500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ec\\\"), \\\"nom\\\" : \\\"Laouani\\\", \\\"prenom\\\" : \\\"Bassil\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 38, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ed\\\"), \\\"nom\\\" : \\\"Autran\\\", \\\"prenom\\\" : \\\"Vincent\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 41, \\\"rue\\\" : \\\"General DeBase\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ee\\\"), \\\"nom\\\" : \\\"Menard\\\", \\\"prenom\\\" : \\\"Eric\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 42, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 561908352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7d9\\\"), \\\"nom\\\" : \\\"King\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 27, \\\"adresse\\\" : { \\\"numero\\\" : 78, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7da\\\"), \\\"nom\\\" : \\\"Ossola\\\", \\\"prenom\\\" : \\\"Christophe\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 75, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7db\\\"), \\\"nom\\\" : \\\"Monnin\\\", \\\"prenom\\\" : \\\"Gilles\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 80, \\\"rue\\\" : \\\"General Leclerc\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7dc\\\"), \\\"nom\\\" : \\\"Priou\\\", \\\"prenom\\\" : \\\"Franck\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 79, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 547608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7dd\\\"), \\\"nom\\\" : \\\"Leberre\\\", \\\"prenom\\\" : \\\"Stephanie\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 79, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 559608352, \\\"prime\\\" : 1500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7de\\\"), \\\"nom\\\" : \\\"Rupont\\\", \\\"prenom\\\" : \\\"Jean\\\", \\\"anciennete\\\" : 11, \\\"adresse\\\" : { \\\"numero\\\" : 15, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7df\\\"), \\\"nom\\\" : \\\"Ving\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 17, \\\"adresse\\\" : { \\\"numero\\\" : 28, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7e0\\\"), \\\"nom\\\" : \\\"Bass\\\", \\\"prenom\\\" : \\\"Vincent\\\", \\\"anciennete\\\" : 12, \\\"adresse\\\" : { \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e1\\\"), \\\"nom\\\" : \\\"Motin\\\", \\\"prenom\\\" : \\\"Roger\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 67, \\\"rue\\\" : \\\"Jean Moulin\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e2\\\"), \\\"nom\\\" : \\\"Prito\\\", \\\"prenom\\\" : \\\"Arnaud\\\", \\\"anciennete\\\" : 6, \\\"adresse\\\" : { \\\"numero\\\" : 62, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 565608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e3\\\"), \\\"nom\\\" : \\\"Fererre\\\", \\\"prenom\\\" : \\\"Julien\\\", \\\"anciennete\\\" : 8, \\\"adresse\\\" : { \\\"numero\\\" : 24, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 577608352, \\\"prime\\\" : 4500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e4\\\"), \\\"nom\\\" : \\\"Cuponi\\\", \\\"prenom\\\" : \\\"Eric\\\", \\\"anciennete\\\" : 10, \\\"adresse\\\" : { \\\"numero\\\" : 28, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e5\\\"), \\\"nom\\\" : \\\"Kingaba\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 23, \\\"adresse\\\" : { \\\"numero\\\" : 38, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e6\\\"), \\\"nom\\\" : \\\"Sola\\\", \\\"prenom\\\" : \\\"Nicolas\\\", \\\"anciennete\\\" : 3, \\\"adresse\\\" : { \\\"numero\\\" : 45, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e7\\\"), \\\"nom\\\" : \\\"Mani\\\", \\\"prenom\\\" : \\\"Dominique\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 47, \\\"rue\\\" : \\\"Lavoisier\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e8\\\"), \\\"nom\\\" : \\\"Briu\\\", \\\"prenom\\\" : \\\"Rene\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 107, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 575608352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7e9\\\"), \\\"nom\\\" : \\\"Leterre\\\", \\\"prenom\\\" : \\\"Stephane\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 9, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 528608352, \\\"prime\\\" : 3500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ec\\\"), \\\"nom\\\" : \\\"Laouani\\\", \\\"prenom\\\" : \\\"Bassil\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 38, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ed\\\"), \\\"nom\\\" : \\\"Autran\\\", \\\"prenom\\\" : \\\"Vincent\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 41, \\\"rue\\\" : \\\"General DeBase\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ee\\\"), \\\"nom\\\" : \\\"Menard\\\", \\\"prenom\\\" : \\\"Eric\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 42, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 561908352 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ef\\\"), \\\"nom\\\" : \\\"Landry\\\", \\\"prenom\\\" : \\\"Brunel\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 79, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 561008352, \\\"prime\\\" : 7500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f0\\\"), \\\"nom\\\" : \\\"Rigal\\\", \\\"prenom\\\" : \\\"Cyril\\\", \\\"anciennete\\\" : 14, \\\"adresse\\\" : { \\\"numero\\\" : 108, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f1\\\"), \\\"nom\\\" : \\\"Dupre\\\", \\\"prenom\\\" : \\\"Bertrand\\\", \\\"anciennete\\\" : 4, \\\"adresse\\\" : { \\\"numero\\\" : 92, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f2\\\"), \\\"nom\\\" : \\\"Roy\\\", \\\"prenom\\\" : \\\"Christophe\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 5, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f3\\\"), \\\"nom\\\" : \\\"Potin\\\", \\\"prenom\\\" : \\\"Stephanie\\\", \\\"anciennete\\\" : 3, \\\"adresse\\\" : { \\\"numero\\\" : 15, \\\"rue\\\" : \\\"Jean Sens\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f4\\\"), \\\"nom\\\" : \\\"Hollande\\\", \\\"prenom\\\" : \\\"Sylvie\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 16, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 96930282 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f5\\\"), \\\"nom\\\" : \\\"Chirac\\\", \\\"prenom\\\" : \\\"Melanie\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 17, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 561607852, \\\"prime\\\" : 1500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f6\\\"), \\\"nom\\\" : \\\"Aumont\\\", \\\"prenom\\\" : \\\"Audrey\\\", \\\"anciennete\\\" : 10, \\\"adresse\\\" : { \\\"numero\\\" : 18, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f7\\\"), \\\"nom\\\" : \\\"Julien\\\", \\\"prenom\\\" : \\\"Marie\\\", \\\"anciennete\\\" : 11, \\\"adresse\\\" : { \\\"numero\\\" : 19, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f8\\\"), \\\"nom\\\" : \\\"Guttierrez\\\", \\\"prenom\\\" : \\\"Garard\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 75, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7f9\\\"), \\\"nom\\\" : \\\"David\\\", \\\"prenom\\\" : \\\"Christophe\\\", \\\"anciennete\\\" : 12, \\\"adresse\\\" : { \\\"numero\\\" : 80, \\\"rue\\\" : \\\"Les tuiles\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7fa\\\"), \\\"nom\\\" : \\\"Allemand\\\", \\\"prenom\\\" : \\\"Edouard\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 17, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 561608552 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7fb\\\"), \\\"nom\\\" : \\\"Has\\\", \\\"prenom\\\" : \\\"Stephen\\\", \\\"anciennete\\\" : 13, \\\"adresse\\\" : { \\\"numero\\\" : 7, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 96930154, \\\"prime\\\" : 5000 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7fc\\\"), \\\"nom\\\" : \\\"Voneschen\\\", \\\"prenom\\\" : \\\"Henri\\\", \\\"anciennete\\\" : 10, \\\"adresse\\\" : { \\\"numero\\\" : 25, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7fd\\\"), \\\"nom\\\" : \\\"Buyot\\\", \\\"prenom\\\" : \\\"David\\\", \\\"anciennete\\\" : 14, \\\"adresse\\\" : { \\\"numero\\\" : 8, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7fe\\\"), \\\"nom\\\" : \\\"Manola\\\", \\\"prenom\\\" : \\\"Christophe\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 7, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ff\\\"), \\\"nom\\\" : \\\"Perrez\\\", \\\"prenom\\\" : \\\"Gilles\\\", \\\"anciennete\\\" : 15, \\\"adresse\\\" : { \\\"numero\\\" : 2, \\\"rue\\\" : \\\"Les sabliers\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f800\\\"), \\\"nom\\\" : \\\"Pinto\\\", \\\"prenom\\\" : \\\"Franck\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 11, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 96928426 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f801\\\"), \\\"nom\\\" : \\\"Baron\\\", \\\"prenom\\\" : \\\"Elodie\\\", \\\"anciennete\\\" : 16, \\\"adresse\\\" : { \\\"numero\\\" : 9, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 96934634, \\\"prime\\\" : 1500 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f802\\\"), \\\"nom\\\" : \\\"Pasqua\\\", \\\"prenom\\\" : \\\"Jean\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 32, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f803\\\"), \\\"nom\\\" : \\\"Moore\\\", \\\"prenom\\\" : \\\"Roland\\\", \\\"anciennete\\\" : 17, \\\"adresse\\\" : { \\\"numero\\\" : 37, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f804\\\"), \\\"nom\\\" : \\\"Copola\\\", \\\"prenom\\\" : \\\"Marc\\\", \\\"anciennete\\\" : 7, \\\"adresse\\\" : { \\\"numero\\\" : 47, \\\"codepostal\\\" : 75000, \\\"ville\\\" : \\\"Paris\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f805\\\"), \\\"nom\\\" : \\\"Batin\\\", \\\"prenom\\\" : \\\"Orlando\\\", \\\"anciennete\\\" : 2, \\\"adresse\\\" : { \\\"numero\\\" : 27, \\\"rue\\\" : \\\"Les huissiers\\\", \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f806\\\"), \\\"nom\\\" : \\\"Buis\\\", \\\"prenom\\\" : \\\"James\\\", \\\"anciennete\\\" : 5, \\\"adresse\\\" : { \\\"numero\\\" : 10, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 96935146 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa2181b16509ae5f807\\\"), \\\"nom\\\" : \\\"Balen\\\", \\\"prenom\\\" : \\\"Ortens\\\", \\\"anciennete\\\" : 1, \\\"adresse\\\" : { \\\"numero\\\" : 11, \\\"codepostal\\\" : 9500, \\\"ville\\\" : \\\"Foix\\\" }, \\\"tel\\\" : 567708352, \\\"prime\\\" : 200 });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0a9f181b16509ae5f7d8\\\"), \\\"nom\\\" : \\\"Dupond\\\", \\\"prenom\\\" : \\\"Jean\\\", \\\"anciennete\\\" : 10, \\\"adresse\\\" : { \\\"numero\\\" : 77, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7ea\\\"), \\\"nom\\\" : \\\"Caponi\\\", \\\"prenom\\\" : \\\"Jean\\\", \\\"anciennete\\\" : 12, \\\"adresse\\\" : { \\\"numero\\\" : 77, \\\"codepostal\\\" : 31000, \\\"ville\\\" : \\\"Toulouse\\\" } });\\ndb.employes.save({ \\\"_id\\\" : ObjectId(\\\"511d0aa0181b16509ae5f7eb\\\"), \\\"nom\\\" : \\\"Bouras\\\", \\\"prenom\\\" : \\\"Gerardo\\\", \\\"anciennete\\\" : 27, \\\"adresse\\\" : { \\\"numero\\\" : 34, \\\"codepostal\\\" : 33000, \\\"ville\\\" : \\\"Bordeaux\\\" } });\\n</code></pre>\\n<ul>\\n<li>display all documents in the collection and their number:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.find();\\n</code></pre>\\n<pre><code class=\\\"language-node\\\">db.employes.find().count();\\n</code></pre>\\n<ul>\\n<li>insert data in two different ways:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.insert({nom:'Alan',prenom:'Joe',anciennete:10});\\ndb.employes.save({nom:'Wick',prenom:'John',prime:150});\\n</code></pre>\\n<ul>\\n<li>display employees whose firstnames are David:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.find({prenom:'David'});\\n</code></pre>\\n<ul>\\n<li>display employees whose firstnames either start with a D or end with a d:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.find({prenom:/D.*|.*d$/});\\n</code></pre>\\n<ul>\\n<li>employees whose firstnames both start and end with a vowel:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.find({prenom:/^[AEIOUY].*[aeiouy]$/});\\n</code></pre>\\n<ul>\\n<li>employees with firstnames starting and ending with the same letter:</li>\\n</ul>\\n<pre><code class=\\\"language-node\\\">db.employes.find().forEach(function(p){let pre = p.prenom.toLowerCase();if(pre.substr(0,1)==pre.substr(pre.length-1,1)){print(pre);}});\\n</code></pre>\\n<ul>\\n<li>\\n<p>display employees whose anciennete is larger than 10 years:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({anciennete:{$gt:10}},{_id:0,nom:1,prenom:1});\\n</code></pre>\\n</li>\\n<li>\\n<p>display name and address of employees whose street is known:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({'adresse.rue':{$exists:true}},{nom:1,adresse:1});\\ndb.employes.find({'adresse.rue':{$exists:true}},{nom:1,adresse:1}).limit(2).pretty();\\ndb.employes.find({'adresse.rue':{$exists:true}},{nom:1,adresse:1,_id:0}).limit(2).pretty();\\n</code></pre>\\n</li>\\n<li>\\n<p>increase of 200 the prime of employees already having a prime</p>\\n<pre><code class=\\\"language-node\\\">db.employes.updateMany({prime:{$exists:true}},{$inc:{prime:200}});\\n</code></pre>\\n</li>\\n<li>\\n<p>list the first three among employees sorted in a decreasing way by seniority:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({anciennete:{$exists:true}},{_id:0}).sort({anciennete:-1}).limit(3).pretty();\\n</code></pre>\\n</li>\\n<li>\\n<p>display empoyees from Toulouse with their seniority:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({'adresse.ville':'Toulouse'},{nom:1,prenom:1,anciennete:1,_id:0}).pretty();\\n</code></pre>\\n</li>\\n<li>\\n<p>More <code>find</code> queries:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({$and:[{prenom:/^M/},{$or:[{'adresse.ville':'Foix'},{'adresse.ville':'Bordeaux'}]}]});\\ndb.employes.find({$and:[{prenom:/^M/},{$or:[{'adresse.ville':'Foix'},{'adresse.ville':'Bordeaux'}]}]}).pretty();\\n</code></pre>\\n</li>\\n<li>\\n<p>Update operation on an employee's address:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.update({prenom: 'Dominique', nom:'Mani'},{$set:{'adresse.numero':20,'adresse.ville':'Marseille','adresse.codepostal':'13015'},$unset:{'adresse.rue':1}});\\n</code></pre>\\n</li>\\n<li>\\n<p>Add prime to employees from Toulouse and Bordeaux without primes:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.updateMany({$and:[{\\\"adresse.ville\\\":{$nin:[\\\"Paris\\\",\\\"Toulouse\\\",\\\"Bordeaux\\\"]}},{prime:{$exists:false}}]},{$set:{prime:1500}});\\n</code></pre>\\n</li>\\n<li>\\n<p>miscelaneous:</p>\\n<pre><code class=\\\"language-node\\\">db.employes.find({tel:{$exists:true}},{}).forEach(function(t){db.employes.updateMany({_id:t._id},{$push:{telephone:t.tel},$unset:{tel:1}});});\\ndb.employes.find({prime:{$exists:0}}).count();\\ndb.employes.find({prime:{$exists:0}}).forEach(function(doc){var length = doc.adresse.ville.length; var newPrime = 100*length; db.employes.update({_id: doc._id},{$inc:{prime: newPrime}});});\\ndb.employes.find({prime:{$exists:0}}).count();\\ndb.employes.find().forEach(function(p){var email=p.nom+'.'+p.prenom+'@formation.fr';if(p.telephone){var email=p.prenom+'.'+p.nom+'@formation.fr';db.employes.updateMany({_id:p._id},{$set:{mail:email}})}});\\ndb.employes.aggregate({$group:{_id:'$prenom',ancienneteCum:{$sum:'$anciennete'}}},{$sort:{_id:1}});\\nObjectId(\\\"511d0aa0181b16509ae5f7f7\\\");\\n</code></pre>\\n</li>\\n</ul>\",\"id\":\"/home/nicolas/projects/workshop/src/pages/2021-10-20-mongo/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2021-10-20T10:14:00.823Z\",\"path\":\"/mongo\",\"title\":\"Mongo\",\"excerpt\":\"\",\"tags\":[\"NoSQL\",\"mongo\"]}},\"next\":{\"html\":\"<h2>Cargo commands</h2>\\n<p>Command to create a project:</p>\\n<pre><code class=\\\"language-bash\\\">cargo new hello\\n</code></pre>\\n<p>You can compile and run the project now with:</p>\\n<pre><code class=\\\"language-bash\\\">cargo run\\n</code></pre>\\n<p>This builds the project in a directory called <code>target/debug</code>.\\nTo build the project in the <code>target/release</code> directory intended for prod, just run:</p>\\n<pre><code class=\\\"language-bash\\\">cargo run --release\\n</code></pre>\\n<p>A good tip to improve the code with idiomatic rust coding hints/warnings is to run:</p>\\n<pre><code class=\\\"language-bash\\\">cargo clippy\\n</code></pre>\\n<h2>Strings</h2>\\n<p>String slices refered to as <code>str</code>\\nare almost always handled in the shape of borrowed string slices <code>&#x26;str</code>.\\nSee also the Rust documentation on <a href=\\\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\\\">references and borrowing</a>.</p>\\n<p>A string literal stated\\n<code>let msg = \\\"Hello 🌎\\\";</code>\\nis a borrowed string slice.</p>\\n<p>The other string type is String.\\nData in a borrowed string slice cannot be modified\\nwhile data in a String can be modified.</p>\\n<p>A String can be obtained by applying the to_string() method on a\\nborrowed string slice:</p>\\n<pre><code>let msg = \\\"ab🎉\\\".to_string();\\n</code></pre>\\n<p>or else by passing the borrowed string slice to String::from:</p>\\n<pre><code>let msg = String::from(\\\"ab🎉\\\");\\n</code></pre>\\n<p>Internally, a borrowed string slice is made up of a pointer to some byte and\\na length. The length is the number of unicode characters in the string.</p>\\n<p>Bytes can be extracted from a borrowed string slice with the bytes() method: <code>word.bytes();</code></p>\\n<p>An iterator on unicode scalars can be built with <code>word.chars();</code></p>\\n<p>Additionally, an iterator on graphemes can be retrieved using a package called unicode-segmentation with:</p>\\n<p><code>graphemes(my_string, true)</code></p>\\n<p>A given item in the graphemes can then be accessed with by appending a statement like<code>.nth(3)</code></p>\\n<p>All of the helper methods to manipulate String objects are documented\\n<a href=\\\"https://doc.rust-lang.org/std/string/struct.String.html#method.bytes\\\">here</a>.</p>\\n<h2>Structs and Traits</h2>\\n<pre><code class=\\\"language-rust\\\">#[derive(Debug)]\\nstruct RedFox {\\n    enemy: bool,\\n    life: u32,\\n}\\n\\ntrait Noisy {\\n    fn get_noise(&#x26;self) -> &#x26;str;\\n}\\n\\nimpl Noisy for RedFox {\\n    fn get_noise(&#x26;self) -> &#x26;str { \\\"Meow?\\\" }\\n}\\n\\nfn print_noise&#x3C;T: Noisy>(item: T) {\\n    println!(\\\"\\\", item.get_noise());\\n}\\n\\nimpl Noisy for u8 {\\n    fn get_noise(&#x26;self) -> &#x26;str { \\\"BYTE!\\\" }\\n}\\n\\nfn main() {\\n    print_noise(5_u8); // prints \\\"BYTE!\\\"\\n}\\n</code></pre>\\n<h2>Vectors</h2>\\n<pre><code class=\\\"language-rust\\\">let mut v: Vec&#x3C;i32> = Vec::new();\\nv.push(2);\\nv.push(4);\\nv.push(6);\\nlet x = v.pop();    // x is 6\\nprintln(\\\"{}\\\", v[1]);// prints \\\"4\\\"\\nlet mut u = vec![2, 4, 6];\\n</code></pre>\\n<h2>Hashmaps</h2>\\n<pre><code class=\\\"language-rust\\\">let mut h: HashMap&#x3C;u8, bool> = HashMap::new();\\nh.insert(5, true);\\nh.insert(6, false);\\nlet have_five = h.remove(&#x26;5).unwrap();\\n</code></pre>\\n<p>Other collections: VecDeque, LinkedList, HashSet, BinaryHeap, BTreeMap, BTreeSet</p>\\n<h2>Enums</h2>\\n<pre><code class=\\\"language-rust\\\">enum Color {\\n    Red,\\n    Green,\\n    Blue,\\n}\\nlet color = Color::Red;\\n</code></pre>\\n<pre><code class=\\\"language-rust\\\">enum DispenserItem {\\n    Empty,\\n    Ammo(u8),\\n    Things(String, i32),\\n    Place {x: i32, y: i32},\\n}\\n\\nuse DispenserItem::*;\\nlet item1 = Ammo(69);\\nlet item2 = Things(\\\"hat\\\".to_string(), 7);\\n</code></pre>\\n<h3>The rust predefined Option enum</h3>\\n<pre><code class=\\\"language-rust\\\">enum Option&#x3C;T> {\\n    Some(T),\\n    None,\\n}\\n\\nlet mut x: Option&#x3C;i32> =  None;\\nx = Some(5);\\nx.is_some(); // true\\nx.is_none(); false\\nfor i in x {\\n    println!(\\\"{}\\\", i); // prints 5\\n}\\n</code></pre>\\n<h3>The rust predefined Result enum</h3>\\n<pre><code class=\\\"language-rust\\\">enum Result&#x3C;T, E> {\\n    Ok(T),\\n    Err(E),\\n}\\n</code></pre>\\n<p>Example with Result:</p>\\n<pre><code class=\\\"language-rust\\\">use std::fs::File;\\n\\nfn main() {\\n    let res = File::open(\\\"foo\\\");\\n    let f = res.unwrap();\\n}\\n\\nfn main() {\\n    let res = File::open(\\\"foo\\\");\\n    let f = res.expect(\\\"error message\\\");\\n}\\n\\nfn main() {\\n    let res = File::open(\\\"foo\\\");\\n    let f = res.is_ok() {\\n        let f = res.unwrap();\\n    }\\n}\\n\\nfn main() {\\n    let res = File::open(\\\"foo\\\");\\n    match res {\\n        Ok(f) => { /* do stuff */ },\\n        Err(e) => { /* do stuff */ },\\n    }\\n}\\n</code></pre>\\n<h3>Ownership, references  &#x26; borrowing</h3>\\n<p>There are 3 rules to ownership:</p>\\n<ol>\\n<li>Each value has an owner</li>\\n<li>There is only one owner of a value</li>\\n<li>Value gets dropped if its owner goes out of scope</li>\\n</ol>\\n<pre><code class=\\\"language-rust\\\">x: &#x26;mut i32\\n*x // a mutable i32\\n</code></pre>\\n<pre><code class=\\\"language-rust\\\">x: &#x26;i32\\n*x: // an immutable i32\\n</code></pre>\\n<p>At any time, it is possible to have one mutable reference\\nor any number of immutable references to a given value.</p>\\n<p>A borrowed variable passed to a function can be dereferenced in two ways.\\nThe first way is automated deferencing:</p>\\n<pre><code class=\\\"language-rust\\\">fn do_stuff(s: &#x26;mut String) {\\n    s.insert_str(0, \\\"Hi, \\\");\\n}\\n</code></pre>\\n<p>And the second way is manual:</p>\\n<pre><code class=\\\"language-rust\\\">fn do_stuff(s: &#x26;mut String) {\\n    *s = String::from(\\\"Replacement\\\")\\n}\\n</code></pre>\",\"id\":\"/home/nicolas/projects/workshop/src/pages/2022-02-06-rust/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2022-02-06T10:17:00.823Z\",\"path\":\"/rust\",\"title\":\"Rust\",\"excerpt\":\"\",\"tags\":[\"rust\"]}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/linux-utils.json\n// module id = 426\n// module chunks = 276602839367171"],"sourceRoot":""}